{
 'Реквизиты': {
  'Код': '000000003',
  'Наименование': 'Контроль - сбор и отправка ошибок из журнала',
  'ТекстОбработки': '	//------------------------------------------------------------------------------\r
	//ПАРАМЕТРЫ                                          \r
	//------------------------------------------------------------------------------\r
	Отладка = Ложь;   \r
	\r
	ДатаНачалаВыгрузки = ТекущаяДата();\r
	МаксКоличествоДнейЖРНазад = 60;  \r
	МаксКолвоСобытий = 1000; //не более 1000 событий\r
	ТемаСообщения = ""+Система+" - ошибки ЖР от "+Формат(ДатаНачалаВыгрузки,"ДФ=dd.MM.yyyy");  \r
	\r
	ПочтаПолучателей = "ssmirnov@t-medica.com"; \r
	\r
	ДопПолучатели = ПолучитьЗначениеПеременной(Переменные,"ПолучателиПоСистеме",Система);\r
	Если ЗначениеЗаполнено(ДопПолучатели) Тогда  \r
		ПочтаПолучателей = ПочтаПолучателей + ", "+ДопПолучатели;\r
	КонецЕсли;\r
	  \r
	ГуидУчетнойЗаписиПочты = "567e3146-123f-11ed-a12c-ef295ee2b5a3"; //системная\r
	 \r
    Если Отладка Тогда \r
    	ПочтаПолучателей = "ssmirnov@t-medica.com";\r
    КонецЕсли;\r
	\r
	СимволПереносаСтроки = Символы.ПС + Символы.ВК;\r
	ТекстСообщения = "Ошибки ЖР на " + Формат(ДатаНачалаВыгрузки,"ДФ=dd.MM.yyyy")+" во вложенном файле"+СимволПереносаСтроки+СимволПереносаСтроки+\r
		"Если в журнале видите лишние события, на которые не нужно обращать внимания, пишите Смирнову Сергею, я отключу их рассылку"+СимволПереносаСтроки+\r
		"Для отключений событий по пользователю, установите ему в системе признак ""ПользовательАдминистратор1С"" или папку ""Администратор"" (в зависимости от системы)";\r
\r
	//произвольные отборы накладываются ниже\r
	\r
	\r
	 \r
	\r
	//------------------------------------------------------------------------------\r
	//Сбор ЖР\r
	//------------------------------------------------------------------------------\r
	ДанныеПоследнейВыгрузки = ПолучитьДанныеПоследнейВыгрузки(Система,ЗапросСсылка.Ссылка);\r
	ДатаНачала = Макс(ДанныеПоследнейВыгрузки.Дата,НачалоДня(ДатаНачалаВыгрузки)-86400*МаксКоличествоДнейЖРНазад); //не ранее чем за последние X дней \r
	\r
	//------------------------------------------------------------------------------\r
	//Запрос в базу\r
	//------------------------------------------------------------------------------ \r
	Код1СДляИсистемы = ПолучитьЗначениеПеременной(Переменные,"Код1СДляСистемы",Система);\r
	Если Код1СДляИсистемы = Неопределено Тогда 		\r
		Код1СДляИсистемы = ПолучитьЗначениеПеременной(Переменные,"Код1СДляСистемы"); //общее\r
	КонецЕсли;\r
	  \r
	ПараметрыHTTPЗапроса = новый структура("ДатаНачала,МаксКолвоСобытий",ДатаНачала,МаксКолвоСобытий);\r
	СтруктураЗапроса = Новый Структура("value,params",Код1СДляИсистемы,ПараметрыHTTPЗапроса);	\r
			\r
	ЗаписьJSON = Новый ЗаписьJSON;ЗаписьJSON.УстановитьСтроку();ЗаписатьJSON(ЗаписьJSON, СтруктураЗапроса);			\r
	СтрокаТелаЗапроса = ЗаписьJSON.Закрыть();\r
		\r
	HTTPЗапрос = Новый HTTPЗапрос(Соединение.АдресЗапроса+"?DateParamsNames=ДатаНачала");     \r
	HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаТелаЗапроса);\r
	HTTPОтвет = Соединение.HTTPСоединение.ВызватьHTTPМетод("POST", HTTPЗапрос); \r
	РезультатРазбораHTTP = Алгоритм("ПрочитатьОтветСервисаUniversal",HTTPОтвет); \r
	Если не РезультатРазбораHTTP.Успешно Тогда \r
		ВызватьИсключение РезультатРазбораHTTP.Результат;\r
	КонецЕсли;\r
\r
	СтруктураРезультатЗапросаHTTP = ЗначениеИзСтрокиВнутр(РезультатРазбораHTTP.Результат);\r
	ТЗ_ЖР = СтруктураРезультатЗапросаHTTP.ТЗ_ЖР;\r
	МассивИменАдминов = СтруктураРезультатЗапросаHTTP.МассивИменАдминов;\r
 	
 	//++ SP-3808
	ТЗ_ЖР.Колонки.Добавить("КоличествоОшибок");
	ТЗ_ЖР.ЗаполнитьЗначения(1,"КоличествоОшибок");
	//-- SP-3808

 		\r
	//------------------------------------------------------------------------------\r
	//СКД\r
	//------------------------------------------------------------------------------\r
	СхемаКомпоновкиДанных = Новый СхемаКомпоновкиДанных;\r
	\r
	ВнешниеНаборыДанных = Новый Структура;\r
	ВнешниеНаборыДанных.Вставить("ТЗДанные", ТЗ_ЖР);\r
	\r
	ИсточникДанных = СхемаКомпоновкиДанных.ИсточникиДанных.Добавить();\r
	ИсточникДанных.Имя = "ИсточникДанных1";ИсточникДанных.ТипИсточникаДанных = "Local";     \r
	\r
	НаборДанныхЗапросСКД = СхемаКомпоновкиДанных.НаборыДанных.Добавить(Тип("НаборДанныхОбъектСхемыКомпоновкиДанных")); //НаборДанныхЗапросСхемыКомпоновкиДанных\r
	НаборДанныхЗапросСКД.Имя = "НаборДанных1";\r
	//НаборДанныхЗапросСКД.Запрос = ПолучитьЗначениеПеременной(Переменные,"ТекстЗапроса");\r
	НаборДанныхЗапросСКД.ИмяОбъекта = "ТЗДанные";\r
	НаборДанныхЗапросСКД.ИсточникДанных = "ИсточникДанных1";\r
	//НаборДанныхЗапросСКД.АвтоЗаполнениеДоступныхПолей = Истина; //для запроса\r
		\r
	Для каждого КолонкаТЗ Из ТЗ_ЖР.Колонки Цикл //для ТЗ\r
		НовоеПоле = НаборДанныхЗапросСКД.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));\r
		НовоеПоле.ТипЗначения = КолонкаТЗ.ТипЗначения; \r
		НовоеПоле.Заголовок = КолонкаТЗ.Заголовок;\r
		НовоеПоле.ПутьКданным = КолонкаТЗ.Имя;\r
		НовоеПоле.Поле = КолонкаТЗ.Имя;
		
		//++ SP-3808
		Если КолонкаТЗ.Имя = "Дата" Тогда 
			ПолеРесурса = СхемаКомпоновкиДанных.ПоляИтога.Добавить();
    		ПолеРесурса.ПутьКДанным = КолонкаТЗ.Имя;
    		ПолеРесурса.Выражение = "МАКСИМУМ("+КолонкаТЗ.Имя+")";
			ПолеРесурса.Группировки.Добавить("Событие");
    	ИначеЕсли КолонкаТЗ.Имя = "КоличествоОшибок" Тогда 
			ПолеРесурса = СхемаКомпоновкиДанных.ПоляИтога.Добавить();
    		ПолеРесурса.ПутьКДанным = КолонкаТЗ.Имя;
    		ПолеРесурса.Выражение = "КОЛИЧЕСТВО("+КолонкаТЗ.Имя+")";
			ПолеРесурса.Группировки.Добавить("Событие");
    	ИначеЕсли КолонкаТЗ.Имя = "Комментарий" Тогда 
			ПолеРесурса = СхемаКомпоновкиДанных.ПоляИтога.Добавить();
    		ПолеРесурса.ПутьКДанным = КолонкаТЗ.Имя;
			ПолеРесурса.Выражение = "Массив(Различные "+КолонкаТЗ.Имя+")";
			ПолеРесурса.Группировки.Добавить("Событие");
    	КонецЕсли; 
		//-- SP-3808
 \r
		//оформление\r
		НовоеПоле.Оформление.УстановитьЗначениеПараметра("Размещение",ТипРазмещенияТекстаКомпоновкиДанных.Переносить);\r
		НовоеПоле.Оформление.УстановитьЗначениеПараметра("МаксимальнаяВысота",20);\r
	КонецЦикла;\r
	\r
	//Получить инициализированные настройки	\r
	ИсточникДоступныхНастроекКомпоновкиДанных = новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных);\r
	КомпоновщикНастроек = новый КомпоновщикНастроекКомпоновкиДанных;\r
	КомпоновщикНастроек.Инициализировать(ИсточникДоступныхНастроекКомпоновкиДанных);\r
	НастройкиКомпоновки = КомпоновщикНастроек.ПолучитьНастройки();\r
		\r
	//настройки вывода\r
	НастройкиКомпоновки.ПараметрыВывода.УстановитьЗначениеПараметра("МакетОформления","Зеленый");  //БиблиотекаМакетовОформленияКомпоновкиДанных.Зеленый\r
	НастройкиКомпоновки.ПараметрыВывода.УстановитьЗначениеПараметра("ВыводитьЗаголовок",ТипВыводаТекстаКомпоновкиДанных.НеВыводить);\r
	НастройкиКомпоновки.ПараметрыВывода.УстановитьЗначениеПараметра("ВыводитьПараметрыДанных",ТипВыводаТекстаКомпоновкиДанных.НеВыводить);\r
	НастройкиКомпоновки.ПараметрыВывода.УстановитьЗначениеПараметра("ВыводитьОтбор",ТипВыводаТекстаКомпоновкиДанных.НеВыводить);\r
	//++ SP-3808 
	НастройкиКомпоновки.ПараметрыВывода.УстановитьЗначениеПараметра("АвтоПозицияРесурсов",АвтоПозицияРесурсовКомпоновкиДанных.НеИспользовать);
	//-- SP-3808   
	
	//ВЫБРАННЫЕ ПОЛЯ\r
	ГруппировкаКД = НастройкиКомпоновки.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));\r
	АвтоВыбранноеПолеКомпоновкиДанных = ГруппировкаКД.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));	\r
	Для каждого КолонкаТЗ Из ТЗ_ЖР.Колонки Цикл\r
		НовВыбранноеПоле = НастройкиКомпоновки.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));\r
		НовВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных(КолонкаТЗ.Имя);
		//++ SP-3808 
		Если КолонкаТЗ.Имя <> "Дата" и КолонкаТЗ.Имя <> "КоличествоОшибок" и  КолонкаТЗ.Имя <> "Комментарий" Тогда
			ПолеГруппировки = ГруппировкаКД.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));       
			ПолеГруппировки.Использование      = Истина;
			ПолеГруппировки.Поле               = Новый ПолеКомпоновкиДанных(КолонкаТЗ.Имя);
			ПолеГруппировки.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.Элементы;
		КонецЕсли;
		//-- SP-3808  
	КонецЦикла;\r
	\r
	\r
	//сортировка результата\r
	НовЭлПорядка = ГруппировкаКД.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));\r
	НовЭлПорядка.Поле = Новый ПолеКомпоновкиДанных("Дата");НовЭлПорядка.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Возр;\r
		\r
	//------------------------------------------------------------------------------\r
	//ОТБОРЫ СКД\r
	//------------------------------------------------------------------------------     \r
	\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеРавно,"{""S"",""""}"); //УХ\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеСодержит,"невозможно изменить в запрещенном периоде");\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеСодержит,"невозможно поместить в запрещенный период");		 \r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеСодержит,"Операция не может быть выполнена из-за несоответствия версии"); \r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеСодержит,"Данные были изменены или удалены другим пользователем");\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеСодержит,"Нет товаров, доступных для отгрузки"); //УТ\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеСодержит,"по причине:" + Символы.ПС + "Не удалось провести");\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеСодержит,"Рекомендуется перезапустить исполняющиеся процессы после завершени"); //УХ	\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеРавно,"Нет доступных аналитик для расшифровки!");  //УХ\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеСодержит,"Ошибка совместного доступа к файлу");\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеСодержит,"Нарушение общих настроек доступа при расширении рабочей группы"); //ДО\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеСодержит,"Процесс не может получить доступ к файлу, так как этот файл занят другим процессом");\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеСодержит,"Не требуется вводить счет на оплату на основании документа"); //УТ \r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеСодержит,"Пользователь отказался от проверки файла выгрузки платежей в Клиенте банка"); //УХ\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеСодержит,"тскКШДТранспортСообщенийОбмена: Нет сообщений для обработки"); //КШД\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеСодержит,"превышает максимально допустимый размер файла"); //УХ\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеСодержит,"Помещение файла невозможно, повторите попытку позднее"); //УХ\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеСодержит,"У текущего пользователя недостаточно прав для отмены согласования"); //УХ\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеНачинаетсяС,"Нет услуг с вариантом оформления"); //УТ\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеСодержит,"Действие недоступно, так как файл % занят для редактирования");\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеСодержит,"Отменить проведение заявок, находящихся на исполнении или уже исполненных, может только суперпользовател"); //УХ\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеСодержит,"Требуется записать объект перед отправкой на согласование. Операция отменена."); //УХ	\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеСодержит,"Требуется ввести комментарий перед утверждением"); //УХ	\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеСодержит,"Помеченный на удаление документ не может быть проведен!"); //УХ, УТ, ДО	\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеСодержит,"Не удалось сделать непроведенным"); //УХ, УТ, ДО\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеНачинаетсяС,"Ошибка доступа к файлу");  //УХ, УТ, ДО  \r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеСодержит,"Нет данных для счета-фактуры на аванс или на суммовую разницу");  //УХ  \r
    Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеНачинаетсяС,"Недостаточно прав для выполнения операции с файлом");  //УХ, УТ, ДО\r
    Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеНачинаетсяС,"Документ отправлен на согласование. Добавлять файлы могут только участники согласования");  //ДО\r
    Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеНачинаетсяС,"У пользователя недостаточно прав для отмены согласования");  //УХ \r
    Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Комментарий",ВидСравненияКомпоновкиДанных.НеНачинаетсяС,"Задачи были выполнены ранее.");  //УХ\r
    \r
    \r
	           \r
	           \r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Событие",ВидСравненияКомпоновкиДанных.НеНачинаетсяС,"Работа с контрагентами.");  //УХ, УТ, ДО\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Событие",ВидСравненияКомпоновкиДанных.НеНачинаетсяС,"Электронное взаимодействие");  //УХ, УТ, ДО\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Событие",ВидСравненияКомпоновкиДанных.НеРавно,"Преобразование ошибки сервиса в структуру");  //УХ, УТ, ДО	\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Событие",ВидСравненияКомпоновкиДанных.НеРавно,"ПретензионноИсковаяРабота");  //УХ\r
	Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Событие",ВидСравненияКомпоновкиДанных.НеРавно,"Проверка выгрузки платежей");  //УХ\r
    Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"Событие",ВидСравненияКомпоновкиДанных.НеНачинаетсяС,"Обновление шаблонов Росстата");  //БП \r
    	\r
		\r
	//Не выводить ошибки спец пользователей\r
	Для каждого ИмяАдмина из МассивИменАдминов Цикл  \r
		Алгоритм("ДобавитьЭлементОтбора",НастройкиКомпоновки.Отбор,"ИмяПользователя",ВидСравненияКомпоновкиДанных.НеРавно,ИмяАдмина);\r
	КонецЦикла;\r
	\r
		\r
	//------------------------------------------------------------------------------\r
	//Формирование и отправка отчета по почте\r
	//------------------------------------------------------------------------------ \r
	\r
	//Вывести отчет в ТД\r
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;\r
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,НастройкиКомпоновки, , ,Тип("ГенераторМакетаКомпоновкиДанных"));\r
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;\r
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных,ВнешниеНаборыДанных);\r
	\r
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;\r
	ТДРезультат = ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);\r
	\r
	Если ТДРезультат.ВысотаТаблицы < 2 Тогда\r
		//нет данных\r
		СтрокаОшибок = СтрокаОшибок + ""+Система+" - нет данных для отправки"+Символы.ПС;\r
	Иначе\r
		//есть данные, отправить в письме \r
		\r
		Вложения = новый Массив;		\r
		//через поток в памяти\r
		//ПотокФайла = Новый ПотокВПамяти();\r
		//ТДРезультат.Записать(ПотокФайла,ТипФайлаТабличногоДокумента.XLSX);\r
		//ДвоичныеДанныеФайла = ПотокФайла.ЗакрытьИПолучитьДвоичныеДанные();	\r
		//Вложения.Добавить(Новый структура("Представление,АдресВоВременномХранилище",ТемаСообщения+".xlsx",ДвоичныеДанныеФайла)); \r
		//ТипТекста = ТипТекстаПочтовогоСообщения.РазмеченныйТекст;\r
		\r
		//в тело письма HTMLТекстОтчета\r
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла("html");\r
		ТДРезультат.Записать(ИмяВременногоФайла, ТипФайлаТабличногоДокумента.HTML);\r
		ЧтениеТекста = Новый ЧтениеТекста(ИмяВременногоФайла);\r
		HTMLТекстОтчета = ЧтениеТекста.Прочитать();\r
		ЧтениеТекста.Закрыть();\r
		УдалитьФайлы(ИмяВременногоФайла); \r
		ТекстСообщения = ТекстСообщения + Символы.ПС + HTMLТекстОтчета;\r
		ТипТекста = ТипТекстаПочтовогоСообщения.HTML; \r
		\r
		Алгоритм("ОтправитьEmail",ЗапросСсылка,ПочтаПолучателей,ТемаСообщения,ТекстСообщения,ТипТекста,ГуидУчетнойЗаписиПочты,Вложения);\r
		\r
		СтрокаОшибок = СтрокаОшибок + ""+Система+" - сообщения отправлены"+Символы.ПС;\r
	КонецЕсли;	\r
	\r
	Если не Отладка Тогда\r
		УстановитьДатуПоследнейВыгрузки(Система,ЗапросСсылка,ДатаНачалаВыгрузки);\r
	КонецЕсли;',
  'Комментарий': 'СКД программно, результат в тело письма или как вложение'
 },
 'ТЧ': [
  {
   'Переменные': [
    {
     'Имя': 'ПолучателиПоСистеме',
     'Разделитель': 'e1cib/data/Справочник.УМ_ИнформационныеБазы?ref=a12cef295ee2b5a311ed073efc4c2983',
     'ЗначениеСтрока': 'SSmirnov@t-medica.com',
     'Комментарий': ''
    },
    {
     'Имя': 'Код1СДляСистемы',
     'Разделитель': null,
     'ЗначениеСтрока': 'ДатаНачала = Дата(params.ДатаНачала);	\r
МаксКолвоСобытий = params.МаксКолвоСобытий;\r
\r
//ЖР\r
ТЗ_ЖР = Новый ТаблицаЗначений; \r
СтруктураОтбораЖурнала = Новый Структура;\r
СтруктураОтбораЖурнала.Вставить("ДатаНачала",ДатаНачала);\r
СтруктураОтбораЖурнала.Вставить("Уровень",УровеньЖурналаРегистрации.Ошибка);\r
ИменаКолонок = "Дата,Пользователь,Компьютер,ИмяПриложения,Событие,Комментарий,ПредставлениеДанных,ИмяПользователя,ПредставлениеСобытия,ПредставлениеМетаданных";\r
ВыгрузитьЖурналРегистрации(ТЗ_ЖР,СтруктураОтбораЖурнала,ИменаКолонок,,МаксКолвоСобытий);\r
\r
//Спец пользователи\r
МассивИменАдминов = Новый Массив;\r
ЗапросАдминов = Новый Запрос; \r
ЗапросАдминов.Текст = "ВЫБРАТЬ\r
|	ПользователиДополнительныеРеквизиты.Ссылка.ИдентификаторПользователяИБ КАК ИдентификаторПользователяИБ\r
|	ИЗ\r
|		Справочник.Пользователи.ДополнительныеРеквизиты КАК ПользователиДополнительныеРеквизиты\r
|	ГДЕ\r
|		ПользователиДополнительныеРеквизиты.Свойство = &ДопСвойство\r
|		И ЕСТЬNULL(ПользователиДополнительныеРеквизиты.Значение, ЛОЖЬ) = ИСТИНА";	\r
СвойствоРазработчикАналитик = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","ПользовательАдминистратор1С"); \r
ЗапросАдминов.УстановитьПараметр("ДопСвойство",СвойствоРазработчикАналитик);   	\r
ВыборкаАдминов = ЗапросАдминов.Выполнить().Выбрать();	\r
Пока ВыборкаАдминов.Следующий() Цикл\r
	ТекПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ВыборкаАдминов.ИдентификаторПользователяИБ);\r
	Если ТекПользовательИБ <> Неопределено Тогда  \r
		МассивИменАдминов.Добавить(ТекПользовательИБ.Имя);	\r
	КонецЕсли;\r
КонецЦикла;  \r
	\r
Result = ЗначениеВСтрокуВнутр(Новый Структура("ТЗ_ЖР,МассивИменАдминов",ТЗ_ЖР,МассивИменАдминов));',
     'Комментарий': 'Общее'
    },
    {
     'Имя': 'Код1СДляСистемы',
     'Разделитель': 'e1cib/data/Справочник.УМ_ИнформационныеБазы?ref=a1389a1477d34aa711ed64de66f52e6d',
     'ЗначениеСтрока': 'ДатаНачала = Дата(params.ДатаНачала);   \r
МаксКолвоСобытий = params.МаксКолвоСобытий;\r
\r
//ЖР\r
ТЗ_ЖР = Новый ТаблицаЗначений; \r
СтруктураОтбораЖурнала = Новый Структура;\r
СтруктураОтбораЖурнала.Вставить("ДатаНачала",ДатаНачала);\r
СтруктураОтбораЖурнала.Вставить("Уровень",УровеньЖурналаРегистрации.Ошибка);\r
ИменаКолонок = "Дата,Пользователь,Компьютер,ИмяПриложения,Событие,Комментарий,ПредставлениеДанных,ИмяПользователя,ПредставлениеСобытия,ПредставлениеМетаданных";\r
ВыгрузитьЖурналРегистрации(ТЗ_ЖР,СтруктураОтбораЖурнала,ИменаКолонок,,МаксКолвоСобытий);\r
\r
//Спец пользователи  \r
\r
МассивИменАдминов = Новый Массив;\r
ЗапросАдминов = Новый Запрос; \r
ЗапросАдминов.Текст = "ВЫБРАТЬ\r
|	Пользователи.Код КАК КодПользователя\r
|ИЗ\r
|	Справочник.Пользователи КАК Пользователи\r
|ГДЕ\r
|	Пользователи.Родитель <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)\r
|	И Пользователи.Родитель.Наименование = ""Администраторы""";\r
\r
     \r
МассивИменАдминов = ЗапросАдминов.Выполнить().Выгрузить().ВыгрузитьКолонку("КодПользователя");\r
\r
Result = ЗначениеВСтрокуВнутр(Новый Структура("ТЗ_ЖР,МассивИменАдминов",ТЗ_ЖР,МассивИменАдминов));',
     'Комментарий': 'Вместо доп свойств - папки'
    },
    {
     'Имя': 'Код1СДляСистемы',
     'Разделитель': 'e1cib/data/Справочник.УМ_ИнформационныеБазы?ref=a14287575112374c11ede342c76fecdd',
     'ЗначениеСтрока': 'ДатаНачала = Дата(params.ДатаНачала);   \r
    МаксКолвоСобытий = params.МаксКолвоСобытий;\r
\r
    //ЖР\r
    ТЗ_ЖР = Новый ТаблицаЗначений; \r
    СтруктураОтбораЖурнала = Новый Структура;\r
    СтруктураОтбораЖурнала.Вставить("ДатаНачала",ДатаНачала);\r
    СтруктураОтбораЖурнала.Вставить("Уровень",УровеньЖурналаРегистрации.Ошибка);\r
    ИменаКолонок = "Дата,Пользователь,Компьютер,ИмяПриложения,Событие,Комментарий,ПредставлениеДанных,ИмяПользователя,ПредставлениеСобытия,ПредставлениеМетаданных";\r
    ВыгрузитьЖурналРегистрации(ТЗ_ЖР,СтруктураОтбораЖурнала,ИменаКолонок,,МаксКолвоСобытий);\r
\r
    //Спец пользователи  \r
\r
    МассивИменАдминов = Новый Массив;\r
    ЗапросАдминов = Новый Запрос; \r
    ЗапросАдминов.Текст = "ВЫБРАТЬ\r
    |   Пользователи.Код КАК КодПользователя\r
    |ИЗ\r
    |   Справочник.Пользователи КАК Пользователи\r
    |ГДЕ\r
    |   Пользователи.Родитель <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)\r
    |   И Пользователи.Родитель.Наименование = ""Администраторы""";\r
\r
         \r
    МассивИменАдминов = ЗапросАдминов.Выполнить().Выгрузить().ВыгрузитьКолонку("КодПользователя");\r
\r
    Result = ЗначениеВСтрокуВнутр(Новый Структура("ТЗ_ЖР,МассивИменАдминов",ТЗ_ЖР,МассивИменАдминов));',
     'Комментарий': ''
    },
    {
     'Имя': 'Код1СДляСистемы',
     'Разделитель': 'e1cib/data/Справочник.УМ_ИнформационныеБазы?ref=a14287575112374c11ede40e8bb9e0ed',
     'ЗначениеСтрока': 'ДатаНачала = Дата(params.ДатаНачала);   \r
    МаксКолвоСобытий = params.МаксКолвоСобытий;\r
\r
    //ЖР\r
    ТЗ_ЖР = Новый ТаблицаЗначений; \r
    СтруктураОтбораЖурнала = Новый Структура;\r
    СтруктураОтбораЖурнала.Вставить("ДатаНачала",ДатаНачала);\r
    СтруктураОтбораЖурнала.Вставить("Уровень",УровеньЖурналаРегистрации.Ошибка);\r
    ИменаКолонок = "Дата,Пользователь,Компьютер,ИмяПриложения,Событие,Комментарий,ПредставлениеДанных,ИмяПользователя,ПредставлениеСобытия,ПредставлениеМетаданных";\r
    ВыгрузитьЖурналРегистрации(ТЗ_ЖР,СтруктураОтбораЖурнала,ИменаКолонок,,МаксКолвоСобытий);\r
\r
    //Спец пользователи  \r
\r
    МассивИменАдминов = Новый Массив;\r
    ЗапросАдминов = Новый Запрос; \r
    ЗапросАдминов.Текст = "ВЫБРАТЬ\r
    |   Пользователи.Код КАК КодПользователя\r
    |ИЗ\r
    |   Справочник.Пользователи КАК Пользователи\r
    |ГДЕ\r
    |   Пользователи.Родитель <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)\r
    |   И Пользователи.Родитель.Наименование = ""Администраторы""";\r
\r
         \r
    МассивИменАдминов = ЗапросАдминов.Выполнить().Выгрузить().ВыгрузитьКолонку("КодПользователя");\r
\r
    Result = ЗначениеВСтрокуВнутр(Новый Структура("ТЗ_ЖР,МассивИменАдминов",ТЗ_ЖР,МассивИменАдминов));',
     'Комментарий': ''
    }
   ]
  }
 ]
}
