{
 'Реквизиты': {
  'Наименование': 'Заполнить employeeID Пользователей 1С в DWH',
  'ТекстОбработки': '//-----------------------------------------------------------------
//Параметры выгрузки
//-----------------------------------------------------------------
Отладка = Ложь; 

//-----------------------------------------------------------------  
//Служебные параметры  
//----------------------------------------------------------------- 

ДатаВыгрузки = ТекущаяДата();
СистемаGUID = XMLСтрока(Система); 


ОбновленоПоФилицам = 0;  
ОбновленоПоAD = 0; 

//-----------------------------------------------------------------  
//Выполнение 
//-----------------------------------------------------------------
//1. По Физлицам
ЗаписиSQL = Соединение.Execute(ПолучитьЗначениеПеременной(Переменные,"ТекстЗапросаSQL_ПоФизлицам"));		
Пока ЗаписиSQL.EOF=0 Цикл
	
	UUID = ЗаписиSQL.Fields("UUID").Value;
	ФизическиеЛица_employeeID = ЗаписиSQL.Fields("ФизическиеЛица_employeeID").Value;
	ЗапросSQLUpdate = "Update dbo.ПользователиИБ1С SET employeeID = \u0027"+ФизическиеЛица_employeeID+"\u0027 WHERE UUID = \u0027"+UUID+"\u0027";
	Соединение.Execute(ЗапросSQLUpdate);
	ОбновленоПоФилицам = ОбновленоПоФилицам + 1;
	
	ЗаписиSQL.MoveNext(); 	
КонецЦикла;	

//2. По AD
ЗаписиSQL = Соединение.Execute(ПолучитьЗначениеПеременной(Переменные,"ТекстЗапросаSQL_ПоAD"));		
Пока ЗаписиSQL.EOF=0 Цикл
	
	UUID = ЗаписиSQL.Fields("UUID").Value;
	SET_employeeID = ЗаписиSQL.Fields("SET_employeeID").Value;
	ЗапросSQLUpdate = "Update dbo.ПользователиИБ1С SET employeeID = \u0027"+SET_employeeID+"\u0027 WHERE UUID = \u0027"+UUID+"\u0027";
	Соединение.Execute(ЗапросSQLUpdate);
	ОбновленоПоAD = ОбновленоПоAD + 1;
	
	ЗаписиSQL.MoveNext(); 	
КонецЦикла;	
	
		
Если не Отладка Тогда
	УстановитьДатуПоследнейВыгрузки(Система,ЗапросСсылка,ДатаВыгрузки);
КонецЕсли; 

СтрокаОшибок = СтрокаОшибок + ?(СтрокаОшибок="","",Символы.ПС)+ Система +  "Обновлено по филицам - "+ОбновленоПоФилицам+". Обновлено по AD - "+ ОбновленоПоAD;',
  'Комментарий': ''
 },
 'ТЧ': [
  {
   'Переменные': [
    {
     'Имя': 'ТекстЗапросаSQL_ПоФизлицам',
     'Разделитель': null,
     'ЗначениеСтрока': 'SELECT 
      ПользователиИБ1С.UUID
      ,ПользователиИБ1С.employeeID
      ,ФизическиеЛица.employeeID as ФизическиеЛица_employeeID
  FROM dbo.ПользователиИБ1С AS ПользователиИБ1С
    INNER JOIN dbo.ФизическиеЛица AS ФизическиеЛица
        ON ПользователиИБ1С.ПолноеИмя = ФизическиеЛица.Наименование AND not ФизическиеЛица.employeeID is null
  WHERE 
    ПользователиИБ1С.employeeID is null
	AND ПользователиИБ1С.ИмеетПравоНаВход = 1',
     'Комментарий': ''
    },
    {
     'Имя': 'ТекстЗапросаSQL_ПоAD',
     'Разделитель': null,
     'ЗначениеСтрока': 'SELECT 
      ПользователиИБ1С.UUID
	  ,ПользователиИБ1С.ПолноеИмя
      ,ADauthorization.employeeID as SET_employeeID
  FROM dbo.ПользователиИБ1С AS ПользователиИБ1С
    INNER JOIN (SELECT AD.employeeID, AD.DisplayName, \u0027\\\\\u0027+AD_PrefixFor1C.Prefix+\u0027\\\u0027+ AD.sAMAccountName AS authorization1C, AD.ADsPath
			   FROM dbo.AD AS AD 
				INNER JOIN dbo.AD_PrefixFor1C as AD_PrefixFor1C
					ON AD.Система = AD_PrefixFor1C.СистемаAD
				WHERE NOT AD.employeeID is NULL AND  AD.employeeID <> \u0027\u0027 AND  AD.employeeID <> \u0027-\u0027 AND  AD.employeeID <> \u00270\u0027  ) AS ADauthorization

		ON ПользователиИБ1С.АутентификацияОС = 1 AND ПользователиИБ1С.ПользовательОС <> \u0027\u0027
			 
  WHERE 
    ПользователиИБ1С.employeeID is null
	AND ПользователиИБ1С.ПользовательОС = ADauthorization.authorization1C
    AND ПользователиИБ1С.ИмеетПравоНаВход = 1',
     'Комментарий': ''
    }
   ]
  }
 ]
}
