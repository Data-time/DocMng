{
 'Реквизиты': {
  'Наименование': 'Интеграция с УПП (Возврат оборудования - Оформлен возврат прибора)',
  'ТекстОбработки': 'ДанныеПодключений = Новый Структура;
Для каждого ДанныеПеременной Из Переменные Цикл
	ДанныеПодключений.Вставить(ДанныеПеременной.Имя, ДанныеПеременной.Значение);
КонецЦикла;

Запрос = Новый Запрос;
Запрос.Текст = 
	"ВЫБРАТЬ
		|	ТекущиеСостоянияДокументов.Документ КАК Документ,
		|	ТекущиеСостоянияДокументов.Действие КАК Действие,
		|	DT_Данные_ВозвратОборудования.Идентификатор КАК Идентификатор,
		|	ОбработкиОбъектов.ДатаНачала КАК ДатаНачала
		|ИЗ
		|	РегистрСведений.ТекущиеСостоянияДокументов КАК ТекущиеСостоянияДокументов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.DT_ДопНастройкиВидовДокументов КАК DT_ДопНастройкиВидовДокументов
		|		ПО ТекущиеСостоянияДокументов.Документ.ВидДокумента = DT_ДопНастройкиВидовДокументов.Владелец
		|			И (DT_ДопНастройкиВидовДокументов.ФункционалВозвратаОборудования)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДействияИсполнения КАК ДействияИсполнения
		|		ПО ТекущиеСостоянияДокументов.Действие = ДействияИсполнения.Ссылка
		|			И (ДействияИсполнения.ВидДействия = &ВидДействия)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.DT_Данные_ВозвратОборудования КАК DT_Данные_ВозвратОборудования
		|		ПО ТекущиеСостоянияДокументов.Документ = DT_Данные_ВозвратОборудования.Владелец
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбработкиОбъектов КАК ОбработкиОбъектов
		|		ПО ТекущиеСостоянияДокументов.Документ = ОбработкиОбъектов.Владелец
		|			И (НЕ ОбработкиОбъектов.ПомещенаВИсторию)
		|ГДЕ
		|	ТекущиеСостоянияДокументов.Состояние = &Состояние
		|	И ТекущиеСостоянияДокументов.Документ.ДатаСоздания >= &ДатаОтбора";
Запрос.УстановитьПараметр("ВидДействия", УМ_ДинамическиеКонстантыПовтИсп.ПолучитьЗначениеДинамическойКонстанты("ВозвратОборудования_ОформлениеВозврата"));
Запрос.УстановитьПараметр("Состояние", Перечисления.СостоянияДокументов.НаИсполнении);
Запрос.УстановитьПараметр("ДатаОтбора", НачалоДня(ТекущаяДата()) - 365 * 24*60*60 );
РезультатЗапроса = Запрос.Выполнить();
Выборка = РезультатЗапроса.Выбрать();
Пока Выборка.Следующий() Цикл
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("UIDMessage"	, Строка(Новый УникальныйИдентификатор));
	СтруктураДанных.Вставить("GUIDDoc"		, XMLСтрока(Выборка.Документ));
	СтруктураДанных.Вставить("StartDate"	, Выборка.ДатаНачала);
	СтруктураДанных.Вставить("ID"			, Выборка.Идентификатор);
	
	Подключение = Неопределено;
	Если ДанныеПодключений.Свойство("ВозвратОборудования_ОформленВозвратПрибора") Тогда
		Подключение = ДанныеПодключений.ВозвратОборудования_ОформленВозвратПрибора;
	КонецЕсли;
	
	Если Подключение = Неопределено Тогда
		ТекстОшибки = "Ошибка при интеграции с УПП(возврат оборудования - Оформлен возврат прибора). Ошибка получения соединения: " + СтрокаОшибок;
		
		ЗаписьЖурналаРегистрации(
			"DT_ИнтеграцияСУПП",
			УровеньЖурналаРегистрации.Ошибка,,,
			ТекстОшибки);
			
		Продолжить;
		
	Иначе
		
		СтрокаОшибок = "";
		Соединение = УМ_ВнешниеПодключения.ПолучитьСоединениеПоПодключению(Подключение, СтрокаОшибок);
		Если Соединение = Неопределено Тогда
			ТекстОшибки = "Ошибка при интеграции с УПП(возврат оборудования - Оформлен возврат прибора). Ошибка получения соединения: " + СтрокаОшибок;
			
			ЗаписьЖурналаРегистрации(
				"DT_ИнтеграцияСУПП",
				УровеньЖурналаРегистрации.Ошибка,,,
				ТекстОшибки);
				
			Продолжить;
		КонецЕсли;
		
		МассивСообщений = Новый Массив;
		МассивСообщений.Добавить(СтруктураДанных);
		
		СтруктураОтправки = Новый Структура;
		СтруктураОтправки.Вставить("ArrayMessages", МассивСообщений);
		СтруктураОтправки.Вставить("IDNode", 		"UPP");//Код узла на стороне УПП
		
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();  
		ЗаписатьJSON(ЗаписьJSON, СтруктураОтправки);            
		ДанныеВУПП = ЗаписьJSON.Закрыть();
		
		HTTPЗапрос = Новый HTTPЗапрос(Соединение.АдресЗапроса);
		HTTPЗапрос.УстановитьТелоИзСтроки(ДанныеВУПП);
		
		МассивОтветаСервиса = Новый Массив;
		Попытка
			ДатаВремяНачалаПопыткиОтправки = ТекущаяДата();
			Ответ = Соединение.HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);
			
			Если Ответ.КодСостояния = 200 Тогда
				
				ЧтениеJSON = Новый ЧтениеJSON;
				ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());  
				ДанныеОтвета = ПрочитатьJSON(ЧтениеJSON);            
				ЧтениеJSON.Закрыть();
				
				Если ДанныеОтвета.Success Тогда
					Если ТипЗнч(ДанныеОтвета.Result) = Тип("Массив") Тогда
						МассивОтветаСервиса = ДанныеОтвета.Result;
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				ТекстОшибки = Ответ.ПолучитьТелоКакСтроку();
				
				ЗаписьЖурналаРегистрации(
					"DT_ИнтеграцияСУПП",
					УровеньЖурналаРегистрации.Ошибка,,,
					"Ошибка при интеграции с УПП(возврат оборудования - Оформлен возврат прибора). Код состояния: " + Ответ.КодСостояния + Символы.ПС + ТекстОшибки);			
			КонецЕсли;
		Исключение
			ТекстОшибки = ОписаниеОшибки();
			
			ЗаписьЖурналаРегистрации(
				"DT_ИнтеграцияСУПП",
				УровеньЖурналаРегистрации.Ошибка,,,
				"Ошибка при интеграции с УПП(возврат оборудования - Оформлен возврат прибора). " + ТекстОшибки);
		КонецПопытки;
		
		Для каждого ДанныеОбработки Из МассивОтветаСервиса Цикл
	
			Если ТипЗнч(ДанныеОбработки.ExtraData) = Тип("Структура") Тогда
				
				Если ДанныеОбработки.ExtraData.Свойство("Result")
					И ДанныеОбработки.ExtraData.Свойство("NameDoc") Тогда
					
					Если ДанныеОбработки.ExtraData.Result Тогда
					
						Действия = Новый Массив;
						Действия.Добавить(Выборка.Действие);
						
						ЗадачиДействия = РаботаСПроцессамиПоДействиям.ЗадачиПроцессовПоУчастникамДействий(Действия);
						
						Для Каждого КлючИЗначение1 Из ЗадачиДействия Цикл
			
							ЗадачиПроцессовПоУчастникамДействия = КлючИЗначение1.Значение;
							Для Каждого КлючИЗначение2 Из ЗадачиПроцессовПоУчастникамДействия Цикл
								
								ЗадачаПроцесса = КлючИЗначение2.Значение;
								
								ПараметрыВыполнения = Новый Структура;
								ПараметрыВыполнения.Вставить("РезультатВыполнения", "Оформлен документ: " + ДанныеОбработки.ExtraData.NameDoc);
								ПараметрыВыполнения.Вставить("ДатаИсполнения", ТекущаяДатаСеанса());
								
								ВыполнениеЗадачСервер.ВыполнитьЗадачу(ЗадачаПроцесса, ПараметрыВыполнения);
								
							КонецЦикла;
							
						КонецЦикла;
						
					КонецЕсли;
						
				КонецЕсли;
				
			КонецЕсли;	
			
		КонецЦикла;	
		
	КонецЕсли;
	
КонецЦикла;
',
  'Комментарий': ''
 },
 'ТЧ': [
  {
   'Переменные': [
    {
     'Имя': 'ВозвратОборудования_ОформленВозвратПрибора',
     'Разделитель': null,
     'ЗначениеСтрока': '',
     'Комментарий': ''
    }
   ]
  }
 ]
}
