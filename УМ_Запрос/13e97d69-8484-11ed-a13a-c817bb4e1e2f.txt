{
 'Реквизиты': {
  'Код': '000000025',
  'Наименование': 'Интеграция с УХ (первичная выгрузка + файлы)',
  'ТекстОбработки': 'ДанныеПодключений = Новый Структура;
Для каждого ДанныеПеременной Из Переменные Цикл
	Если ДанныеПеременной.Разделитель <> Система Тогда
		Продолжить;	
	КонецЕсли;
	
	ДанныеПодключений.Вставить(ДанныеПеременной.Имя, ДанныеПеременной.Значение);
КонецЦикла;

ТипСобытия_ИнтеграцияУХ_ЗаявкиНаОплату = Справочники.УМ_ТипыСобытий.ПолучитьТипСобытияПоИдентификатору("ИнтеграцияУХ_ЗаявкиНаОплату");    
ТиповойУзелУХ = ПланыОбмена.ИнтегрированныеСистемы.НайтиПоРеквизиту("Идентификатор", "01d86b4e-9605-4df6-8d45-043a0a105895");

//++ SP-12042
ПорядокОбхода = Новый Массив;
ПорядокОбхода.Добавить(Метаданные.Справочники.ДокументыПредприятия);
ПорядокОбхода.Добавить(Метаданные.Справочники.ВерсииФайлов);
//-- SP-12042

Запрос = Новый Запрос;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	DT_ДО_ВнешниеСистемы.Ссылка КАК Ссылка
	|ИЗ
	|	ПланОбмена.DT_ДО_ВнешниеСистемы КАК DT_ДО_ВнешниеСистемы
	|ГДЕ
	|	DT_ДО_ВнешниеСистемы.ВыгружатьЗаявкиНаОплату
	|	И НЕ DT_ДО_ВнешниеСистемы.ПометкаУдаления
	|	И НЕ DT_ДО_ВнешниеСистемы.ЭтотУзел";
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Узел = ВыборкаДетальныеЗаписи.Ссылка;
	
	//++ SP-12042
	//ВыборкаИзменений = ПланыОбмена.ВыбратьИзменения(Узел, Узел.НомерОтправленного);
	Для каждого ТипМетаданных Из ПорядокОбхода Цикл
	
		ВыборкаИзменений = ПланыОбмена.ВыбратьИзменения(Узел, Узел.НомерОтправленного, ТипМетаданных);
	//-- SP-12042
	
		СообщениеСформировано = Ложь;
		
		Пока ВыборкаИзменений.Следующий() Цикл
		
			РегОбъект = ВыборкаИзменений.Получить();

			Если ТипЗнч(РегОбъект) = Тип("СправочникОбъект.ДокументыПредприятия") Тогда
				
				Документ = РегОбъект.Ссылка;
				НастройкиПоВидуДокумента = DT_ОбщегоНазначениеПовтИсп.ПолучитьНастройкиПоВидуДокумента(Документ.ВидДокумента);
			
				Если НастройкиПоВидуДокумента.ФункционалЗаявкиНаОплату Тогда
				
					СтруктураДанных = Новый Структура;
					СтруктураДанных.Вставить("UIDMessage", 	Строка(Новый УникальныйИдентификатор));
					СтруктураДанных.Вставить("GUIDDoc", 	Строка(Документ.УникальныйИдентификатор()));
					СтруктураДанных.Вставить("Type", 		"Справочник.ДокументыПредприятия");
					
					СтруктураОбъекта = Новый Структура("ExtGUID,OrganizationINN,ContractorINN,ContractorKPP,sum,CurrencyCode,InitiatorName,Purpose,Deadline,Comment,ListArticleDDS,sumNDS,Number");
					СтруктураОбъекта.ExtGUID = XMLСтрока(Документ);
					СтруктураОбъекта.OrganizationINN = Документ.Организация.ИНН;   
					Если Документ.Контрагенты.Количество() > 0 Тогда
						СтруктураОбъекта.ContractorINN = Документ.Контрагенты[0].Контрагент.ИНН; 
						СтруктураОбъекта.ContractorKPP = Документ.Контрагенты[0].Контрагент.КПП; 
					КонецЕсли;
					СтруктураОбъекта.sum = Документ.Сумма; 
					СтруктураОбъекта.CurrencyCode = Документ.Валюта.Код;
					Если ТипЗнч(Документ.Подготовил) = Тип("СправочникСсылка.Сотрудники") Тогда
						InitiatorName = Строка(Сотрудники.ФизЛицоСотрудника(Документ.Подготовил));
					ИначеЕсли ТипЗнч(Документ.Подготовил) = Тип("СправочникСсылка.Пользователи") Тогда
						InitiatorName = Строка(ПользователиДокументооборот.ФизЛицоПользователя(Документ.Подготовил));
					Иначе 
						InitiatorName = "";
					КонецЕсли;
					СтруктураОбъекта.InitiatorName = InitiatorName;
					
					СтруктураОбъекта.Purpose = Документ.Содержание;
					СтруктураОбъекта.Deadline = Документ.СрокИсполнения;
					
					СтруктураОбъекта.Number = Документ.РегистрационныйНомер;
					
					
					СсылкаНаДопДанные = DT_ОбщегоНазначенияСерверВызовСервера.ПолучитьСсылкуНаДопДанныеДокумента(Документ, "DT_Данные_ЗаявкаНаОплату");	
					Если ЗначениеЗаполнено(СсылкаНаДопДанные) Тогда
						СтруктураОбъекта.Comment = СтрШаблон("%1 №%2 от %3",
														СсылкаНаДопДанные.ВидЗаявки,
														СсылкаНаДопДанные.НомерОснования,
														Формат(СсылкаНаДопДанные.ДатаОснования,"ДФ=dd.MM.yyyy"));
					КонецЕсли;

					СтруктураОбъекта.sumNDS = Документ.СуммаНДС;
														
					СтруктураОбъекта.ListArticleDDS = Новый Массив;
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	СтатьиДвиженияДенежныхСредствДокументов.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
						|	СтатьиДвиженияДенежныхСредствДокументов.Сумма КАК Сумма,
						|	СтатьиДвиженияДенежныхСредствДокументов.СуммаНДС КАК СуммаНДС,
						|	СтатьиДвиженияДенежныхСредствДокументов.DT_СтавкаНДС КАК DT_СтавкаНДС
						|ИЗ
						|	РегистрСведений.СтатьиДвиженияДенежныхСредствДокументов КАК СтатьиДвиженияДенежныхСредствДокументов
						|ГДЕ
						|	СтатьиДвиженияДенежныхСредствДокументов.Документ = &Документ";
					Запрос.УстановитьПараметр("Документ", Документ);
					РезультатЗапроса = Запрос.Выполнить();
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						
						СтрутураСтроки = Новый Структура("ArticleDDS, Summ, SummNDS, VATRate");
						СтрутураСтроки.Summ = ВыборкаДетальныеЗаписи.Сумма;
						СтрутураСтроки.SummNDS = ВыборкаДетальныеЗаписи.СуммаНДС;    
						                                         
						Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.DT_СтавкаНДС) Тогда
							ИндексЗначенияПеречисления = Перечисления.СтавкиНДС.Индекс(ВыборкаДетальныеЗаписи.DT_СтавкаНДС);
							СтрутураСтроки.VATRate = Метаданные.Перечисления.СтавкиНДС.ЗначенияПеречисления[ИндексЗначенияПеречисления].Имя;
						Иначе
							СтрутураСтроки.VATRate = "ПустаяСсылка";
						КонецЕсли;
						
						СтрутураСтроки.ArticleDDS = "";
						Запрос = Новый Запрос;
						Запрос.Текст = 
							"ВЫБРАТЬ
							|	СвязиОбъектовИнтегрированныхСистем.ИДВнешнегоОбъекта КАК ИДВнешнегоОбъекта
							|ИЗ
							|	РегистрСведений.СвязиОбъектовИнтегрированныхСистем КАК СвязиОбъектовИнтегрированныхСистем
							|ГДЕ
							|	СвязиОбъектовИнтегрированныхСистем.СсылкаНаОбъектДО = &СсылкаНаОбъектДО";
						Запрос.УстановитьПараметр("СсылкаНаОбъектДО", ВыборкаДетальныеЗаписи.СтатьяДвиженияДенежныхСредств);
						РезультатЗапроса = Запрос.Выполнить();
						Выборка_Связи = РезультатЗапроса.Выбрать();
						Пока Выборка_Связи.Следующий() Цикл
							СтрутураСтроки.ArticleDDS = Выборка_Связи.ИДВнешнегоОбъекта;
						КонецЦикла;
						
						СтруктураОбъекта.ListArticleDDS.Добавить(СтрутураСтроки);
						
					КонецЦикла;
					
					СтруктураДанных.Вставить("ДанныеДокумента", СтруктураОбъекта);
						
					Соединение = Неопределено;
					Если ДанныеПодключений.Свойство("ЗаявкиНаОплатуУХ_Первичная") Тогда
						Соединение = ДанныеПодключений.ЗаявкиНаОплатуУХ_Первичная;
					КонецЕсли;
					Если Соединение <> Неопределено Тогда
						СообщениеСформировано = Истина;
					КонецЕсли;
				
				КонецЕсли;
				
			ИначеЕсли ТипЗнч(РегОбъект) = Тип("СправочникОбъект.ВерсииФайлов") Тогда
				
				Документ = РегОбъект.Владелец.ВладелецФайла;
				
				НастройкиПоВидуДокумента = DT_ОбщегоНазначениеПовтИсп.ПолучитьНастройкиПоВидуДокумента(Документ.ВидДокумента);
			
				Если НастройкиПоВидуДокумента.ФункционалЗаявкиНаОплату Тогда
					
					ГУИДВнешнегоФайла = "";
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	СвязиОбъектовИнтегрированныхСистем.ИДВнешнегоОбъекта КАК ИДВнешнегоОбъекта
						|ИЗ
						|	РегистрСведений.СвязиОбъектовИнтегрированныхСистем КАК СвязиОбъектовИнтегрированныхСистем
						|ГДЕ
						|	СвязиОбъектовИнтегрированныхСистем.УзелИнтегрированнойСистемы = &УзелИнтегрированнойСистемы
						|	И СвязиОбъектовИнтегрированныхСистем.СсылкаНаОбъектДО = &СсылкаНаОбъектДО";
					Запрос.УстановитьПараметр("СсылкаНаОбъектДО", РегОбъект.Владелец);
					Запрос.УстановитьПараметр("УзелИнтегрированнойСистемы", ТиповойУзелУХ);
					РезультатЗапроса = Запрос.Выполнить();
					Выборка = РезультатЗапроса.Выбрать();
					Пока Выборка.Следующий() Цикл
						ГУИДВнешнегоФайла = Выборка.ИДВнешнегоОбъекта;
					КонецЦикла;
		
					
					ДвоичныеДанныефайла = РаботаСФайлами.ДвоичныеДанныеФайла(РегОбъект.Ссылка);
					ФайлКакBase64 = Base64Строка(ДвоичныеДанныефайла);
					ФайлКакBase64 = СтрЗаменить(СтрЗаменить(ФайлКакBase64,Символы.ПС,""),Символы.ВК,"");
					
					СтруктураДанных = Новый Структура;
					СтруктураДанных.Вставить("UIDMessage", 		Строка(Новый УникальныйИдентификатор));
					СтруктураДанных.Вставить("GUIDDoc", 		Строка(Документ.УникальныйИдентификатор()));
					СтруктураДанных.Вставить("Type", 			"Справочник.Файлы");
					СтруктураДанных.Вставить("TypeDoc", 		"DMDocument");
					СтруктураДанных.Вставить("GUIDFile", 		Строка(РегОбъект.Владелец.УникальныйИдентификатор()));
					СтруктураДанных.Вставить("namefile", 		РегОбъект.ПолноеНаименование);
					СтруктураДанных.Вставить("extensionfile", 	РегОбъект.Расширение);
					СтруктураДанных.Вставить("file", 			ФайлКакBase64); 
					СтруктураДанных.Вставить("GUIDFile_UH",		ГУИДВнешнегоФайла);
					
					Соединение = Неопределено;
					Если ДанныеПодключений.Свойство("ЗаявкиНаОплатуУХ_Файлы") Тогда
						Соединение = ДанныеПодключений.ЗаявкиНаОплатуУХ_Файлы;
					КонецЕсли;
					Если Соединение <> Неопределено Тогда
						СообщениеСформировано = Истина;
					КонецЕсли;
					
				КонецЕсли;
					
			КонецЕсли;
			
			Если СообщениеСформировано Тогда
				НачатьТранзакцию();
				Попытка
					РегистрыСведений.УМ_ОчередьСообщенийКОтправке.ДобавитьСообщение(
						ТипСобытия_ИнтеграцияУХ_ЗаявкиНаОплату,
						Соединение,
						СтруктураДанных,
						СтруктураДанных.UIDMessage);	
					
					//Снимем регистрацию с плана обмена
					ПланыОбмена.УдалитьРегистрациюИзменений(Узел, РегОбъект);
					
					ЗафиксироватьТранзакцию();
				Исключение
					ОтменитьТранзакцию();
					
					ЗаписьЖурналаРегистрации(
						"DT_ИнтеграцияСУХ",
						УровеньЖурналаРегистрации.Ошибка,,,
						"Ошибка при интеграции с УХ(заявки на оплату). Не удалось записать новое сообщение для отправки и снять регистрацию с узла обмена.");
				КонецПопытки;
			КонецЕсли;
			
		КонецЦикла;
	
	КонецЦикла;
	
КонецЦикла;

Алгоритм("ОтправитьСообщениеВУХпоТипуСобытия",
	ТипСобытия_ИнтеграцияУХ_ЗаявкиНаОплату,
 	"DT_ИнтеграцияСУХ",
 	"УХ(первичная выгрузка заявок + файлы)");',
  'Комментарий': ''
 },
 'ТЧ': [
  {
   'Переменные': [
    {
     'Имя': 'ЗаявкиНаОплатуУХ_Первичная',
     'Разделитель': 'e1cib/data/Справочник.УМ_ИнформационныеБазы?ref=8cb3a0d3c1fa1eff11ee8f86ed91e435',
     'ЗначениеСтрока': '',
     'Комментарий': ''
    },
    {
     'Имя': 'ЗаявкиНаОплатуУХ_Файлы',
     'Разделитель': 'e1cib/data/Справочник.УМ_ИнформационныеБазы?ref=8cb3a0d3c1fa1eff11ee8f86ed91e435',
     'ЗначениеСтрока': '',
     'Комментарий': ''
    }
   ]
  }
 ]
}
