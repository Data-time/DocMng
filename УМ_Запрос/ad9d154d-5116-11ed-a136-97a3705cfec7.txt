{
 'Реквизиты': {
  'Наименование': 'Загрузка журнала работ из ISM в DWH',
  'ТекстОбработки': '//-------------------------------------------------------------------- 
//Параметры
//--------------------------------------------------------------------

Отладка = Ложь;
 
ИменаИсполнителейISM = "\u0027ssmirnov\u0027,\u0027skryukov\u0027,\u0027nneusypova\u0027,\u0027nnovikov\u0027";
 
ТЗ = новый ТаблицаЗначений;   
ТЗ.Колонки.Добавить("UUID",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(72)));
ТЗ.Колонки.Добавить("Система",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(36)));
ТЗ.Колонки.Добавить("id",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(36)));
ТЗ.Колонки.Добавить("issueId",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(36)));   
ТЗ.Колонки.Добавить("issueType",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(50)));
ТЗ.Колонки.Добавить("timeM",Новый ОписаниеТипов("Число",,));
ТЗ.Колонки.Добавить("started",Новый ОписаниеТипов("Дата",,));  
ТЗ.Колонки.Добавить("updated",Новый ОписаниеТипов("Дата",,));
ТЗ.Колонки.Добавить("comment",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(1024))); 
ТЗ.Колонки.Добавить("authorId",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(50)));
ТЗ.Колонки.Добавить("updateAuthorId",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(50)));
ТЗ.Колонки.Добавить("authorName",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(50)));
ТЗ.Колонки.Добавить("updateAuthorName",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(50)));
ТЗ.Колонки.Добавить("IssueNumber",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(50)));
ТЗ.Колонки.Добавить("IssueSubject",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100)));
 
//-------------------------------------------------------------------- 
//Вычисляемые параметры
//--------------------------------------------------------------------
ДатаПоследнейЗагрузки = НачалоДня(ПолучитьДанныеПоследнейЗагрузки(Система,ЗапросСсылка).Дата); //начало дня - так как иногда пропускаются события
ДатаЗагрузки = ТекущаяДата(); 

СоединениеDWH = ПолучитьЗначениеПеременной(Переменные,"СоединениеDWH");
Если СоединениеDWH = неопределено Тогда
	ВызватьИсключение "Не заполнен параметр СоединениеDWH";
КонецЕсли;
СоединениеDWH = ПолучитьСоединениеПоПодключению(СоединениеDWH,СтрокаОшибок);
Если СоединениеDWH = неопределено Тогда
	ВызватьИсключение "Не выполнено соединение к DWH";
КонецЕсли;


СистемаGUID = XMLСтрока(Система);
     


//-------------------------------------------------------------------- 
//Запрос - получение журнала работ
//--------------------------------------------------------------------
ТекстЗапросаISM = ПолучитьЗначениеПеременной(Переменные,"ТекстЗапросаISM");  
ДатаСтрокаSQL = "\u0027"+Формат(ДатаПоследнейЗагрузки,"ДФ=\u0027ггггММдд ЧЧ:мм:сс:000\u0027; ДП=00010101")+"\u0027";
ТекстЗапросаISM = СтрЗаменить(ТекстЗапросаISM,"&ДатаС",ДатаСтрокаSQL);
ТекстЗапросаISM = СтрЗаменить(ТекстЗапросаISM,"&ИменаИсполнителей",ИменаИсполнителейISM); 
 
RecordSet = Соединение.Execute(ТекстЗапросаISM);
Пока RecordSet.EOF() = Ложь Цикл     
			
	НовСтр = ТЗ.Добавить(); 
	 
	НовСтр.Система = СистемаGUID;
	НовСтр.id = RecordSet.Fields("RecId").Value; 
	НовСтр.UUID = НовСтр.Система + НовСтр.id;
	
	НовСтр.issueId = RecordSet.Fields("RecId").Value;
	НовСтр.timeM = RecordSet.Fields("TimeSpent").Value;
	НовСтр.started = RecordSet.Fields("CreatedDateTime").Value;
	НовСтр.updated = RecordSet.Fields("LastModDateTime").Value;
	НовСтр.comment = RecordSet.Fields("DisplayText").Value;
	//НовСтр.authorName = RecordSet.Fields("RecId").Value;
	//НовСтр.updateAuthorName = RecordSet.Fields("RecId").Value;  
	НовСтр.authorId = RecordSet.Fields("CreatedBy").Value;
	НовСтр.updateAuthorId = RecordSet.Fields("LastModBy").Value;
	НовСтр.IssueNumber = RecordSet.Fields("IssueNumber").Value;
	НовСтр.IssueSubject = RecordSet.Fields("Subject").Value; 
	НовСтр.issueType = RecordSet.Fields("ParentLink_Category").Value;
					
	RecordSet.MoveNext();	
КонецЦикла;


//-------------------------------------------------------------------- 
//Запись в DWH
//--------------------------------------------------------------------

ПараметрыЗаписиВSQL = DT_DWH.ПараметрыЗаписиВSQL();
ПараметрыЗаписиВSQL.ТЗ = ТЗ; 
ПараметрыЗаписиВSQL.ИмяТаблицы = "EmployeeWorklog"; 
ПараметрыЗаписиВSQL.Ключи.Добавить("UUID");
ПараметрыЗаписиВSQL.СвойстваДляСравнения.Добавить("updated");
	
СтруктураОтвета = DT_DWH.ЗаписатьТЗВSQL(СоединениеDWH,ПараметрыЗаписиВSQL);
   
Обработано = ТЗ.Количество();
Добавлено = СтруктураОтвета.Добавлено;
Обновлено = СтруктураОтвета.Обновлено;  
				
СтрокаОшибок = СтрокаОшибок + ?(СтрокаОшибок="","",Символы.ПС)+ Система +  " Обработано - "+Обработано+". Добавлено - "+Добавлено+". Обновлено - "+Обновлено;

Если Успешно и не Отладка  Тогда
	УстановитьДатуПоследнейЗагрузки(Система,ЗапросСсылка,ДатаЗагрузки);
КонецЕсли;',
  'Комментарий': ''
 },
 'ТЧ': [
  {
   'Переменные': [
    {
     'Имя': 'СоединениеDWH',
     'Разделитель': null,
     'ЗначениеСтрока': '',
     'Комментарий': ''
    },
    {
     'Имя': 'ТекстЗапросаISM',
     'Разделитель': null,
     'ЗначениеСтрока': '
SELECT Journal.CreatedBy
      ,Journal.CreatedDateTime
      ,Journal.LastModBy
      ,Journal.LastModDateTime
      ,Journal.ParentLink_RecID
      ,Journal.ParentLink_Category
      ,Journal.RecId
      ,Journal.DisplayText
      ,Journal.TimeSpent
	  ,isnull(isnull(ServiceReq.ServiceReqNumber, Incident.IncidentNumber), Problem.ProblemNumber) as IssueNumber
	  ,isnull(isnull(ServiceReq.Subject, Incident.Subject), Problem.Subject) as Subject 

  FROM Journal
  LEFT Join ServiceReq on Journal.ParentLink_RecID = ServiceReq.RecId and Journal.ParentLink_Category = \u0027ServiceReq\u0027
  LEFT Join Incident on Journal.ParentLink_RecID = Incident.RecId and Journal.ParentLink_Category = \u0027Incident\u0027
  LEFT Join Problem on Journal.ParentLink_RecID = Problem.RecId and Journal.ParentLink_Category = \u0027Problem\u0027
  where Journal.TimeSpent <> 0 and Journal.CreatedBy in (&ИменаИсполнителей)
  and Journal.LastModDateTime > &ДатаС',
     'Комментарий': ''
    }
   ]
  }
 ]
}
