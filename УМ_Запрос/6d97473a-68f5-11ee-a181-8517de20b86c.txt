{
 'Реквизиты': {
  'Код': '000000037',
  'Наименование': 'Загрузка кэша из УПП',
  'ТекстОбработки': '//-----------------------------------------------------------------
//Параметры выгрузки
//-----------------------------------------------------------------
Отладка = Ложь; 
 
ДатаДокументовС = ДобавитьМесяц(ТекущаяДата(),-26); //с какой даты загружать документы
//-----------------------------------------------------------------  
//Служебные параметры  
//----------------------------------------------------------------- 

ДатаЗагрузки = ТекущаяДата();
СистемаGUID = XMLСтрока(Система);   
ТекстЗапроса = ПолучитьЗначениеПеременной(Переменные,"ТекстЗапроса");
	
//-----------------------------------------------------------------  
//Выполнение  
//----------------------------------------------------------------- 

//------------------------------------------------------------------------------
//Запрос в базу
//------------------------------------------------------------------------------ 
Код1СДляИсистемы = ПолучитьЗначениеПеременной(Переменные,"Код1СДляСистемы",Система);
Если Код1СДляИсистемы = Неопределено Тогда 		
	Код1СДляИсистемы = ПолучитьЗначениеПеременной(Переменные,"Код1СДляСистемы"); //общее
КонецЕсли;
	
ПараметрыHTTPЗапроса = новый структура("ДатаДокументовС",ДатаДокументовС);
СтруктураЗапроса = Новый Структура("value,params",Код1СДляИсистемы,ПараметрыHTTPЗапроса);	
		
ЗаписьJSON = Новый ЗаписьJSON;ЗаписьJSON.УстановитьСтроку();ЗаписатьJSON(ЗаписьJSON, СтруктураЗапроса);			
СтрокаТелаЗапроса = ЗаписьJSON.Закрыть();
	
HTTPЗапрос = Новый HTTPЗапрос(Соединение.АдресЗапроса+"?DateParamsNames=ДатаДокументовС");     
HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаТелаЗапроса);
HTTPОтвет = Соединение.HTTPСоединение.ВызватьHTTPМетод("POST", HTTPЗапрос); 
РезультатРазбораHTTP = Алгоритм("ПрочитатьОтветСервисаUniversal",HTTPОтвет); 
Если не РезультатРазбораHTTP.Успешно Тогда 
	ВызватьИсключение РезультатРазбораHTTP.Результат;
КонецЕсли;

МассивВозврата = ЗначениеИзСтрокиВнутр(РезультатРазбораHTTP.Результат);

Для каждого СтруктураВозврата из МассивВозврата Цикл
	ТЗ = СтруктураВозврата.ТЗ;
	НаборЗаписей = РегистрыСведений["DT_КэшДанныхУПП_"+СтруктураВозврата.ИмяОбъекта].СоздатьНаборЗаписей();
	Для каждого Стр из ТЗ Цикл
		НовСтр = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,Стр);
	КонецЦикла; 
	НаборЗаписей.Записать();
КонецЦикла;
	
			
Если не Отладка Тогда
	УстановитьДатуПоследнейЗагрузки(Система,ЗапросСсылка,ДатаЗагрузки);
КонецЕсли;',
  'Комментарий': ''
 },
 'ТЧ': [
  {
   'Переменные': [
    {
     'Имя': 'Код1СДляСистемы',
     'Разделитель': null,
     'ЗначениеСтрока': 'Result = "";

ДатаДокументовС = Дата(params.ДатаДокументовС);

МассивВозврата = Новый Массив;

//-----------------------------------------------------------
//Контрагенты 
//-----------------------------------------------------------
//вывести все папки
Запрос = Новый Запрос;
Запрос.Текст = 
	"ВЫБРАТЬ
	|   УНИКАЛЬНЫЙИДЕНТИФИКАТОР(Контрагенты.Ссылка) КАК GUID,
	|   УНИКАЛЬНЫЙИДЕНТИФИКАТОР(Контрагенты.Родитель) КАК РодительGUID,
	|   Контрагенты.ЭтоГруппа,
	|   Контрагенты.Наименование,
	|   Контрагенты.Код,
	|   Контрагенты.ИНН,
	|   Контрагенты.КПП,
	|   Контрагенты.НаименованиеПолное
	|ИЗ
	|   Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|   Контрагенты.ЭтоГруппа ИЛИ (
	|   НЕ Контрагенты.ПометкаУдаления
	|   И НЕ Контрагенты.Архивный)";


РезультатЗапроса = Запрос.Выполнить();
ТЗ = РезультатЗапроса.Выгрузить();
ТекСтруктураВозврата = новый Структура;
ТекСтруктураВозврата.Вставить("ИмяОбъекта","Контрагенты");
ТекСтруктураВозврата.Вставить("ТЗ",ТЗ);
МассивВозврата.Добавить(ТекСтруктураВозврата); 

//-----------------------------------------------------------
//Договоры 
//-----------------------------------------------------------
//не выводить папки
Запрос = Новый Запрос;
Запрос.Текст = 
	"ВЫБРАТЬ
	|   УНИКАЛЬНЫЙИДЕНТИФИКАТОР(ДоговорыКонтрагентов.Ссылка) КАК GUID,
	|   УНИКАЛЬНЫЙИДЕНТИФИКАТОР(ДоговорыКонтрагентов.Владелец) КАК КонтрагентGUID,
	|   ПРЕДСТАВЛЕНИЕ(ДоговорыКонтрагентов.Владелец) КАК Контрагент,
	|   ДоговорыКонтрагентов.Наименование,
	|   ДоговорыКонтрагентов.Код,
	|   УНИКАЛЬНЫЙИДЕНТИФИКАТОР(ДоговорыКонтрагентов.Организация) КАК ОрганизацияGUID,
	|   ПРЕДСТАВЛЕНИЕ(ДоговорыКонтрагентов.Организация) КАК Организация,
	|   ПРЕДСТАВЛЕНИЕ(ДоговорыКонтрагентов.ВидДоговора) КАК ВидДоговора
	|ИЗ
	|   Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|   НЕ ДоговорыКонтрагентов.ЭтоГруппа
	|   И НЕ ДоговорыКонтрагентов.ПометкаУдаления
	|   И НЕ ДоговорыКонтрагентов.Архивный";

РезультатЗапроса = Запрос.Выполнить();
ТЗ = РезультатЗапроса.Выгрузить();
ТекСтруктураВозврата = новый Структура;
ТекСтруктураВозврата.Вставить("ИмяОбъекта","ДоговорыКонтрагентов");
ТекСтруктураВозврата.Вставить("ТЗ",ТЗ);
МассивВозврата.Добавить(ТекСтруктураВозврата);

//-----------------------------------------------------------
//БанковскиеСчета 
//-----------------------------------------------------------
Запрос = Новый Запрос;
Запрос.Текст = 
	"ВЫБРАТЬ
	|   УНИКАЛЬНЫЙИДЕНТИФИКАТОР(БанковскиеСчета.Ссылка) КАК GUID,
	|   УНИКАЛЬНЫЙИДЕНТИФИКАТОР(БанковскиеСчета.Владелец) КАК ВладелецGUID,
	|   ПРЕДСТАВЛЕНИЕ(БанковскиеСчета.Владелец) КАК Владелец,
	|   БанковскиеСчета.Наименование,
	|   БанковскиеСчета.Код,
	|   БанковскиеСчета.НомерСчета,
	|   ПРЕДСТАВЛЕНИЕ(БанковскиеСчета.ВалютаДенежныхСредств) КАК Валюта,
	|   ПРЕДСТАВЛЕНИЕ(БанковскиеСчета.Банк) КАК Банк
	|ИЗ
	|   Справочник.БанковскиеСчета КАК БанковскиеСчета
	|ГДЕ
	|   НЕ БанковскиеСчета.ПометкаУдаления";

РезультатЗапроса = Запрос.Выполнить();
ТЗ = РезультатЗапроса.Выгрузить();
ТекСтруктураВозврата = новый Структура;
ТекСтруктураВозврата.Вставить("ИмяОбъекта","БанковскиеСчета");
ТекСтруктураВозврата.Вставить("ТЗ",ТЗ);
МассивВозврата.Добавить(ТекСтруктураВозврата);

//-----------------------------------------------------------
//НоменклатурныеГруппы
//-----------------------------------------------------------
//выводить родителей
Запрос = Новый Запрос;
Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Глн_ПланированиеКатегорийНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.Глн_ПланированиеКатегорийНоменклатуры КАК Глн_ПланированиеКатегорийНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	Глн_ПланированиеКатегорийНоменклатуры.ПериодДействия УБЫВ";
Выборка = Запрос.Выполнить().Выбрать();
Если Выборка.Следующий() Тогда
	Глн_ПланированиеКатегорийНоменклатуры = Выборка.Ссылка;
Иначе   
	Глн_ПланированиеКатегорийНоменклатуры = Справочники.Глн_ПланированиеКатегорийНоменклатуры.ПустаяСсылка();
КонецЕсли;

Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ
|   УНИКАЛЬНЫЙИДЕНТИФИКАТОР(НоменклатурныеГруппы.Ссылка) КАК GUID,
|   УНИКАЛЬНЫЙИДЕНТИФИКАТОР(НоменклатурныеГруппы.Родитель) КАК РодительGUID,
|   НоменклатурныеГруппы.Наименование,
|   НоменклатурныеГруппы.Код,
|   ПРЕДСТАВЛЕНИЕ(НоменклатурныеГруппы.ТипНоменклатурнойГруппы) КАК ТипНоменклатурнойГруппы,
|   ПРЕДСТАВЛЕНИЕ(НоменклатурныеГруппы.Производитель) КАК Производитель
|ИЗ
|   Справочник.НоменклатурныеГруппы КАК НоменклатурныеГруппы
|ГДЕ
|   НЕ НоменклатурныеГруппы.ПометкаУдаления
|	И НоменклатурныеГруппы.Владелец = &Глн_ПланированиеКатегорийНоменклатуры"; 
Запрос.УстановитьПараметр("Глн_ПланированиеКатегорийНоменклатуры",Глн_ПланированиеКатегорийНоменклатуры);

РезультатЗапроса = Запрос.Выполнить();
ТЗ = РезультатЗапроса.Выгрузить();
ТекСтруктураВозврата = новый Структура;
ТекСтруктураВозврата.Вставить("ИмяОбъекта","НоменклатурныеГруппы");
ТекСтруктураВозврата.Вставить("ТЗ",ТЗ);
МассивВозврата.Добавить(ТекСтруктураВозврата);

//-----------------------------------------------------------
//СтатьиДвиженияДенежныхСредств
//-----------------------------------------------------------
//вывести все папки, но только в нужной папке
Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(СтатьиДвиженияДенежныхСредств.Ссылка) КАК GUID,
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(СтатьиДвиженияДенежныхСредств.Родитель) КАК РодительGUID,
|	СтатьиДвиженияДенежныхСредств.ЭтоГруппа,
|	СтатьиДвиженияДенежныхСредств.Наименование,
|	СтатьиДвиженияДенежныхСредств.Код,
|	ПРЕДСТАВЛЕНИЕ(СтатьиДвиженияДенежныхСредств.ВидДвиженияДенежныхСредств) КАК ВидДвиженияДенежныхСредств
|ИЗ
|	Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДвиженияДенежныхСредств
|ГДЕ
|	СтатьиДвиженияДенежныхСредств.Ссылка В ИЕРАРХИИ (&ПапкаСтатей) И
|	(СтатьиДвиженияДенежныхСредств.ЭтоГруппа ИЛИ (НЕ СтатьиДвиженияДенежныхСредств.ПометкаУдаления))
|	";
Запрос.УстановитьПараметр("ПапкаСтатей",Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("000000147")); //папка активных статей

РезультатЗапроса = Запрос.Выполнить();
ТЗ = РезультатЗапроса.Выгрузить();
ТекСтруктураВозврата = новый Структура;
ТекСтруктураВозврата.Вставить("ИмяОбъекта","СтатьиДвиженияДенежныхСредств");
ТекСтруктураВозврата.Вставить("ТЗ",ТЗ);
МассивВозврата.Добавить(ТекСтруктураВозврата);


//-----------------------------------------------------------
//ЗаказПокупателя
//-----------------------------------------------------------
Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(ЗаказПокупателя.Ссылка) КАК GUID,
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(ЗаказПокупателя.Контрагент) КАК КонтрагентGUID,
|	ПРЕДСТАВЛЕНИЕ(ЗаказПокупателя.Контрагент) КАК Контрагент,
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(ЗаказПокупателя.Организация) КАК ОрганизацияGUID,
|	ПРЕДСТАВЛЕНИЕ(ЗаказПокупателя.Организация) КАК Организация,
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(ЗаказПокупателя.ДоговорКонтрагента) КАК ДоговорКонтрагентаGUID,
|	ЗаказПокупателя.Номер,
|	ЗаказПокупателя.Дата,
|	ПРЕДСТАВЛЕНИЕ(ЗаказПокупателя.Ссылка) КАК Наименование
|ИЗ
|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
|ГДЕ
|	НЕ ЗаказПокупателя.ПометкаУдаления
|	И ЗаказПокупателя.Дата >= &ДатаДокументовС";
Запрос.УстановитьПараметр("ДатаДокументовС",ДатаДокументовС);

РезультатЗапроса = Запрос.Выполнить();
ТЗ = РезультатЗапроса.Выгрузить();
ТекСтруктураВозврата = новый Структура;
ТекСтруктураВозврата.Вставить("ИмяОбъекта","ЗаказПокупателя");
ТекСтруктураВозврата.Вставить("ТЗ",ТЗ);
МассивВозврата.Добавить(ТекСтруктураВозврата);


//-----------------------------------------------------------
//ЗаказПоставщику
//-----------------------------------------------------------
Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ
|	ЗаказПоставщику.Ссылка КАК Ссылка,
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(ЗаказПоставщику.Ссылка) КАК GUID,
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(ЗаказПоставщику.Контрагент) КАК КонтрагентGUID,
|	ПРЕДСТАВЛЕНИЕ(ЗаказПоставщику.Контрагент) КАК Контрагент,
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(ЗаказПоставщику.Организация) КАК ОрганизацияGUID,
|	ПРЕДСТАВЛЕНИЕ(ЗаказПоставщику.Организация) КАК Организация,
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(ЗаказПоставщику.ДоговорКонтрагента) КАК ДоговорКонтрагентаGUID,
|	ЗаказПоставщику.Номер,
|	ЗаказПоставщику.Дата,
|	ЗаказПоставщику.ДатаОплаты,
|	ЗаказПоставщику.ДоговорКонтрагента,
|	ЗаказПоставщику.СуммаДокумента,
|	ПРЕДСТАВЛЕНИЕ(ЗаказПоставщику.СтруктурнаяЕдиница) КАК СчетОрганизации,
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(ЗаказПоставщику.СтруктурнаяЕдиница) КАК СчетОрганизацииGUID,
|	ЗаказПоставщику.ВалютаДокумента.Код КАК Валюта,
|	ПРЕДСТАВЛЕНИЕ(ЗаказПоставщику.Контрагент.ОсновнойБанковскийСчет) КАК СчетКонтрагента,
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(ЗаказПоставщику.Контрагент.ОсновнойБанковскийСчет) КАК СчетКонтрагентаGUID,
|	ПРЕДСТАВЛЕНИЕ(ЗаказПоставщику.Ссылка) КАК Наименование
|ИЗ
|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
|ГДЕ
|	НЕ ЗаказПоставщику.ПометкаУдаления
|	И ЗаказПоставщику.Дата >= &ДатаДокументовС";
Запрос.УстановитьПараметр("ДатаДокументовС",ДатаДокументовС);

РезультатЗапроса = Запрос.Выполнить();
ТЗ = РезультатЗапроса.Выгрузить();
ТЗ.Колонки.Добавить("ДанныеДляЗаполненияЗаявки", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки()));
НастройкиСериализации = Новый НастройкиСериализацииJSON;
НастройкиСериализации.ФорматСериализацииДаты = ФорматДатыJSON.ISO;
Для каждого СтрокаТЗ Из ТЗ Цикл

	СтруктураОтправки = Новый Структура("ДатаОплаты,ДокументОснование,ДокументОснованиеGUID,
										|СчетОрганизации,СчетОрганизацииGUID,Валюта,Контрагент,
										|КонтрагентGUID,СчетКонтрагента,СчетКонтрагентаGUID");
	СтруктураОтправки.ДатаОплаты = 				СтрокаТЗ.ДатаОплаты;
	СтруктураОтправки.ДокументОснование = 		Строка(СтрокаТЗ.Наименование);
	СтруктураОтправки.ДокументОснованиеGUID = 	Строка(СтрокаТЗ.GUID);
	СтруктураОтправки.СчетОрганизации = 		Строка(СтрокаТЗ.СчетОрганизации);
	СтруктураОтправки.СчетОрганизацииGUID = 	Строка(СтрокаТЗ.СчетОрганизацииGUID);
	СтруктураОтправки.Валюта = 					Строка(СтрокаТЗ.Валюта);
	СтруктураОтправки.Контрагент = 				Строка(СтрокаТЗ.Контрагент);
	СтруктураОтправки.КонтрагентGUID = 			Строка(СтрокаТЗ.КонтрагентGUID);
	СтруктураОтправки.СчетКонтрагента = 		Строка(СтрокаТЗ.СчетКонтрагента);
	СтруктураОтправки.СчетКонтрагентаGUID = 	Строка(СтрокаТЗ.СчетКонтрагентаGUID);
	
	Массив = Новый Массив;
	СтруктураСтроки = Новый Структура("ДоговорКонтрагента,ДоговорКонтрагентаGUID,СтатьяДДС,СтатьяДДСGUID,
									  |Сделка,СделкаGUID,СделкаНомер,СделкаДата,СуммаПлатежа");	
	
	СтруктураСтроки.ДоговорКонтрагента = 		Строка(СтрокаТЗ.ДоговорКонтрагента);
	СтруктураСтроки.ДоговорКонтрагентаGUID = 	Строка(СтрокаТЗ.ДоговорКонтрагента.УникальныйИдентификатор());
	СтруктураСтроки.СтатьяДДС = 				Строка(Справочники.Глн_Переменные.СтатьяДДСОплатаПоставщику.Значение);
	СтруктураСтроки.СтатьяДДСGUID = 			Строка(Справочники.Глн_Переменные.СтатьяДДСОплатаПоставщику.Значение.УникальныйИдентификатор());
	СтруктураСтроки.Сделка = 					Строка(СтрокаТЗ.Наименование);
	СтруктураСтроки.СделкаGUID = 				Строка(СтрокаТЗ.GUID);
	СтруктураСтроки.СделкаНомер = 				Строка(СтрокаТЗ.Номер);
	СтруктураСтроки.СделкаДата = 				СтрокаТЗ.Дата;
	СтруктураСтроки.СуммаПлатежа = 				Строка(СтрокаТЗ.СуммаДокумента);
	
	Массив.Добавить(СтруктураСтроки);
	СтруктураОтправки.Вставить("РасшифровкаПлатежа", Массив);
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();  
	ЗаписатьJSON(ЗаписьJSON, СтруктураОтправки,НастройкиСериализации);            
	СтрокаТЗ.ДанныеДляЗаполненияЗаявки = ЗаписьJSON.Закрыть();
КонецЦикла;
ТекСтруктураВозврата = новый Структура;
ТекСтруктураВозврата.Вставить("ИмяОбъекта","ЗаказПоставщику");
ТекСтруктураВозврата.Вставить("ТЗ",ТЗ);
МассивВозврата.Добавить(ТекСтруктураВозврата); 

//-----------------------------------------------------------
//СчетНаОплатуПокупателю
//-----------------------------------------------------------
Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(СчетНаОплатуПокупателю.Ссылка) КАК GUID,
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(ВЫРАЗИТЬ(СчетНаОплатуПокупателю.Контрагент КАК Справочник.Контрагенты)) КАК КонтрагентGUID,
|	ПРЕДСТАВЛЕНИЕ(СчетНаОплатуПокупателю.Контрагент) КАК Контрагент,
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(СчетНаОплатуПокупателю.Организация) КАК ОрганизацияGUID,
|	ПРЕДСТАВЛЕНИЕ(СчетНаОплатуПокупателю.Организация) КАК Организация,
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(СчетНаОплатуПокупателю.ДоговорКонтрагента) КАК ДоговорКонтрагентаGUID,
|	СчетНаОплатуПокупателю.Номер,
|	СчетНаОплатуПокупателю.Дата,
|	ПРЕДСТАВЛЕНИЕ(СчетНаОплатуПокупателю.Ссылка) КАК Наименование
|ИЗ
|	Документ.СчетНаОплатуПокупателю КАК СчетНаОплатуПокупателю
|ГДЕ
|	НЕ СчетНаОплатуПокупателю.ПометкаУдаления
|	И СчетНаОплатуПокупателю.Дата >= &ДатаДокументовС";
Запрос.УстановитьПараметр("ДатаДокументовС",ДатаДокументовС);

РезультатЗапроса = Запрос.Выполнить();
ТЗ = РезультатЗапроса.Выгрузить();
ТекСтруктураВозврата = новый Структура;
ТекСтруктураВозврата.Вставить("ИмяОбъекта","СчетНаОплатуПокупателю");
ТекСтруктураВозврата.Вставить("ТЗ",ТЗ);
МассивВозврата.Добавить(ТекСтруктураВозврата); 


//-----------------------------------------------------------
//СчетНаОплатуПоставщика
//-----------------------------------------------------------
Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(СчетНаОплатуПоставщика.Ссылка) КАК GUID,
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(СчетНаОплатуПоставщика.Контрагент) КАК КонтрагентGUID,
|	ПРЕДСТАВЛЕНИЕ(СчетНаОплатуПоставщика.Контрагент) КАК Контрагент,
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(СчетНаОплатуПоставщика.Организация) КАК ОрганизацияGUID,
|	ПРЕДСТАВЛЕНИЕ(СчетНаОплатуПоставщика.Организация) КАК Организация,
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(СчетНаОплатуПоставщика.ДоговорКонтрагента) КАК ДоговорКонтрагентаGUID,
|	СчетНаОплатуПоставщика.Номер,
|	СчетНаОплатуПоставщика.Дата,
|	ПРЕДСТАВЛЕНИЕ(СчетНаОплатуПоставщика.Ссылка) КАК Наименование
|ИЗ
|	Документ.СчетНаОплатуПоставщика КАК СчетНаОплатуПоставщика
|ГДЕ
|	НЕ СчетНаОплатуПоставщика.ПометкаУдаления
|	И СчетНаОплатуПоставщика.Дата >= &ДатаДокументовС";
Запрос.УстановитьПараметр("ДатаДокументовС",ДатаДокументовС);

РезультатЗапроса = Запрос.Выполнить();
ТЗ = РезультатЗапроса.Выгрузить();
ТекСтруктураВозврата = новый Структура;
ТекСтруктураВозврата.Вставить("ИмяОбъекта","СчетНаОплатуПоставщика");
ТекСтруктураВозврата.Вставить("ТЗ",ТЗ);
МассивВозврата.Добавить(ТекСтруктураВозврата);

//-----------------------------------------------------------
//Поставка
//-----------------------------------------------------------
Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(Поставка.Ссылка) КАК GUID,
|	Поставка.Номер,
|	Поставка.Дата,
|	ПРЕДСТАВЛЕНИЕ(Поставка.ТипПоставки) КАК ТипПоставки,
|	Поставка.CMR_AWB.Наименование КАК CMR_AWB,
|	ПРЕДСТАВЛЕНИЕ(Поставка.Ссылка) КАК Наименование
|ИЗ
|	Документ.Поставка КАК Поставка
|ГДЕ
|	НЕ Поставка.ПометкаУдаления
|	И Поставка.Дата >= &ДатаДокументовС";
Запрос.УстановитьПараметр("ДатаДокументовС",ДатаДокументовС);

РезультатЗапроса = Запрос.Выполнить();
ТЗ = РезультатЗапроса.Выгрузить();
ТекСтруктураВозврата = новый Структура;
ТекСтруктураВозврата.Вставить("ИмяОбъекта","Поставка");
ТекСтруктураВозврата.Вставить("ТЗ",ТЗ);
МассивВозврата.Добавить(ТекСтруктураВозврата);

//-----------------------------------------------------------
//ЛицевыеСчета
//-----------------------------------------------------------
Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ
|	Выразить(КонтрагентыГлн_ЛицевыеСчета.ЛицевойСчет КАК СТРОКА(100)) КАК GUID,
|	КонтрагентыГлн_ЛицевыеСчета.ЛицевойСчет КАК Наименование,
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(КонтрагентыГлн_ЛицевыеСчета.Ссылка.Ссылка) КАК КонтрагентGUID,
|	КонтрагентыГлн_ЛицевыеСчета.Ссылка.Наименование КАК Контрагент,
|	КонтрагентыГлн_ЛицевыеСчета.НомерСтроки
|ИЗ
|	Справочник.Контрагенты.Глн_ЛицевыеСчета КАК КонтрагентыГлн_ЛицевыеСчета
|ГДЕ
|	НЕ КонтрагентыГлн_ЛицевыеСчета.Ссылка.ПометкаУдаления";

РезультатЗапроса = Запрос.Выполнить();
ТЗ = РезультатЗапроса.Выгрузить();
Для каждого Строка Из ТЗ Цикл
	Строка.GUID = Строка(Строка.КонтрагентGUID) + " " + Строка(Строка.НомерСтроки) + " " + Строка(Строка.GUID);
КонецЦикла;
ТекСтруктураВозврата = новый Структура;
ТекСтруктураВозврата.Вставить("ИмяОбъекта","ЛицевыеСчета");
ТекСтруктураВозврата.Вставить("ТЗ",ТЗ);
МассивВозврата.Добавить(ТекСтруктураВозврата);

//-----------------------------------------------------------
//Глн_ЗаявкаНаКомандировку
//-----------------------------------------------------------
Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ
|	Глн_ЗаявкаНаКомандировку.Ссылка КАК Ссылка,
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(Глн_ЗаявкаНаКомандировку.Ссылка) КАК GUID,
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(Глн_ЗаявкаНаКомандировку.Командируемый) КАК КомандируемыйGUID,
|	ПРЕДСТАВЛЕНИЕ(Глн_ЗаявкаНаКомандировку.Командируемый) КАК Командируемый,
|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(Глн_ЗаявкаНаКомандировку.Организация) КАК ОрганизацияGUID,
|	ПРЕДСТАВЛЕНИЕ(Глн_ЗаявкаНаКомандировку.Организация) КАК Организация,
|	Глн_ЗаявкаНаКомандировку.Номер,
|	Глн_ЗаявкаНаКомандировку.Дата,
|	Глн_ЗаявкаНаКомандировку.ДатаНач КАК ДатаНачала,
|	Глн_ЗаявкаНаКомандировку.ДатаОкон КАК ДатаОкончания,
|	ПРЕДСТАВЛЕНИЕ(Глн_ЗаявкаНаКомандировку.Статус) КАК Статус,
|	Глн_ЗаявкаНаКомандировку.Комментарий,
|	ПРЕДСТАВЛЕНИЕ(Глн_ЗаявкаНаКомандировку.Ссылка) КАК Наименование
|ИЗ
|	Документ.Глн_ЗаявкаНаКомандировку КАК Глн_ЗаявкаНаКомандировку
|ГДЕ
|	НЕ Глн_ЗаявкаНаКомандировку.ПометкаУдаления
|	И Глн_ЗаявкаНаКомандировку.Дата >= &ДатаДокументовС";
Запрос.УстановитьПараметр("ДатаДокументовС",ДатаДокументовС);

РезультатЗапроса = Запрос.Выполнить();
ТЗ = РезультатЗапроса.Выгрузить();
ТЗ.Колонки.Добавить("ДанныеДляЗаполненияЗаявки", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки()));
Для каждого Строка Из ТЗ Цикл
	ТЗ_ЦентрыЗатрат = Строка.Ссылка.ЦентрыЗатрат.Выгрузить();
	ТЗ_ЦентрыЗатрат.Свернуть("ЦФО,НоменклатурнаяГруппа","Процент");
	
	Массив = Новый Массив;
	Для Каждого СтрокаЦЗ Из ТЗ_ЦентрыЗатрат Цикл
		СтруктураСтроки = Новый Структура("НоменклатурнаяГруппа,НоменклатурнаяГруппаGUID,ЦФОGUID,Процент");	
		СтруктураСтроки.НоменклатурнаяГруппа = Строка(СтрокаЦЗ.НоменклатурнаяГруппа);
		СтруктураСтроки.НоменклатурнаяГруппаGUID = Строка(СтрокаЦЗ.НоменклатурнаяГруппа.УникальныйИдентификатор());
		СтруктураСтроки.ЦФОGUID = Строка(СтрокаЦЗ.ЦФО.УникальныйИдентификатор());
		СтруктураСтроки.Процент = СтрокаЦЗ.Процент;
		
		Массив.Добавить(СтруктураСтроки);
	КонецЦикла;
	
	СтруктураОтправки = Новый Структура;
	СтруктураОтправки.Вставить("РазбивкаПоКатегориям", Массив);
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();  
	ЗаписатьJSON(ЗаписьJSON, СтруктураОтправки);            
	Строка.ДанныеДляЗаполненияЗаявки = ЗаписьJSON.Закрыть();
КонецЦикла;
ТекСтруктураВозврата = новый Структура;
ТекСтруктураВозврата.Вставить("ИмяОбъекта","ЗаявкаНаКомандировку");
ТекСтруктураВозврата.Вставить("ТЗ",ТЗ);
МассивВозврата.Добавить(ТекСтруктураВозврата);

result = ЗначениеВСтрокуВнутр(МассивВозврата);',
     'Комментарий': ''
    }
   ]
  }
 ]
}
