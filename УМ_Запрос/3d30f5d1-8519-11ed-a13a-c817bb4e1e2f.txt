{
 'Реквизиты': {
  'Наименование': 'Загрузка журнала работ из SD в DWH',
  'ТекстОбработки': '//-------------------------------------------------------------------- 
//Параметры
//--------------------------------------------------------------------
Отладка= Ложь;

ТЗ = новый ТаблицаЗначений;   
ТЗ.Колонки.Добавить("UUID",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(72)));
ТЗ.Колонки.Добавить("Система",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(36)));
ТЗ.Колонки.Добавить("id",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(36)));
ТЗ.Колонки.Добавить("issueId",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(36)));
ТЗ.Колонки.Добавить("timeM",Новый ОписаниеТипов("Число",,));
ТЗ.Колонки.Добавить("started",Новый ОписаниеТипов("Дата",,));  
ТЗ.Колонки.Добавить("updated",Новый ОписаниеТипов("Дата",,));
ТЗ.Колонки.Добавить("comment",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(1024))); 
ТЗ.Колонки.Добавить("authorId",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(50)));
ТЗ.Колонки.Добавить("updateAuthorId",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(50)));
ТЗ.Колонки.Добавить("authorName",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(50)));
ТЗ.Колонки.Добавить("updateAuthorName",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(50)));
ТЗ.Колонки.Добавить("IssueNumber",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(50)));
ТЗ.Колонки.Добавить("IssueSubject",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100)));  

//-------------------------------------------------------------------- 
//Вычисляемые параметры
//--------------------------------------------------------------------
ДатаПоследнейЗагрузки = ПолучитьДанныеПоследнейЗагрузки(Система,ЗапросСсылка).Дата;  
ДатаЗагрузкиС = НачалоДня(ДатаПоследнейЗагрузки);
ДатаЗагрузкиПо = КонецДня(ТекущаяДата());
ДатаЗагрузки = ТекущаяДата();
 
СоединениеDWH = ПолучитьЗначениеПеременной(Переменные,"СоединениеDWH");
Если СоединениеDWH = неопределено Тогда
	ВызватьИсключение "Не заполнен параметр СоединениеDWH";
КонецЕсли;
СоединениеDWH = ПолучитьСоединениеПоПодключению(СоединениеDWH,СтрокаОшибок);
Если СоединениеDWH = неопределено Тогда
	ВызватьИсключение "Не выполнено соединение к DWH";
КонецЕсли;

HTTPСоединение = Соединение.HTTPСоединение;
   
СистемаGUID = XMLСтрока(Система);
   

//-------------------------------------------------------------------- 
//Запрос получение работ
//-------------------------------------------------------------------- 
ДатаСФормат = Формат(УниверсальноеВремя(ДатаЗагрузкиС) - \u002719700101\u0027, "ЧГ=0")+"000";   
ДатаПоФормат = Формат(УниверсальноеВремя(ДатаЗагрузкиПо) - \u002719700101\u0027, "ЧГ=0")+"000";	
		
СтрокаТелаЗапроса = "SELECT 
|	ct.CHARGEID AS id, 
|	wo.WORKORDERID AS issueId, 
|	ct.TIMESPENT/60000 AS timeM,
|	ct.CREATEDTIME AS started,
|	wos.LAST_TECH_UPDATE AS updated,
|	ct.DESCRIPTION AS comment,
|	ct.TECHNICIANID AS authorId,
|	ct.TECHNICIANID AS updateAuthorId,
|	rcti.LASTNAME + \u0027 \u0027 + rcti.FIRSTNAME + \u0027 \u0027 + rcti.MIDDLENAME AS authorName,
|	rcti.LASTNAME + \u0027 \u0027 + rcti.FIRSTNAME + \u0027 \u0027 + rcti.MIDDLENAME AS updateAuthorName,
|	wo.WORKORDERID AS IssueNumber,
|	wo.TITLE AS IssueSubject
|  
|FROM WorkOrder wo 
|	LEFT JOIN WorkOrderToCharge wotoc ON wo.WORKORDERID=wotoc.WORKORDERID 
|	LEFT JOIN ChargesTable ct ON wotoc.CHARGEID=ct.CHARGEID 
|	LEFT JOIN SDUser rcti ON ct.TECHNICIANID=rcti.USERID 
|	LEFT JOIN AaaUser rctd ON rcti.USERID=rctd.USER_ID 
|	LEFT JOIN SDUser sdu ON wo.REQUESTERID=sdu.USERID 
|	LEFT JOIN AaaUser aau ON sdu.USERID=aau.USER_ID 
|	LEFT JOIN WorkOrderStates wos ON wo.WORKORDERID=wos.WORKORDERID 
|	LEFT JOIN StatusDefinition std ON wos.STATUSID=std.STATUSID 
|
|WHERE   
|	ct.CREATEDTIME >= "+ДатаСФормат+"  AND  ct.CREATEDTIME != 0 AND ct.CREATEDTIME IS NOT NULL 
|	AND ct.CREATEDTIME <= "+ДатаПоФормат+" AND  ct.CREATEDTIME != 0  AND  ct.CREATEDTIME IS NOT NULL   AND  ct.CREATEDTIME != -1    
|	AND wo.ISPARENT=\u00271\u0027  
|
|ORDER BY 1"; 


//Обрезать переносы строк
СтрокаТелаЗапроса = СтрЗаменить(СтрокаТелаЗапроса,Символы.ПС," ");
 
//обернуть в запрос
СтрокаТелаЗапроса ="{""query"": """+СтрокаТелаЗапроса+""" }"; 
 
Если Отладка Тогда Сообщить(СтрокаТелаЗапроса); КонецЕсли; 

//так как передаем по url, то кодируем строку
СтрокаТелаЗапроса = КодироватьСтроку(СтрокаТелаЗапроса, СпособКодированияСтроки.КодировкаURL);
    
HTTPЗапрос = Новый HTTPЗапрос("/api/v3/reports/execute_query?input_data="+СтрокаТелаЗапроса);
HTTPЗапрос.Заголовки = Соединение.Заголовки;
//HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаТелаЗапроса);
Результат = HTTPСоединение.ВызватьHTTPМетод("POST", HTTPЗапрос);  
ТекстОтвета = Результат.ПолучитьТелоКакСтроку();
  
Если Отладка Тогда Сообщить(ТекстОтвета); КонецЕсли;

Если СтрНачинаетсяС(ТекстОтвета,"<?xml") Тогда
	Успешно = Ложь; 
	СтрокаОшибок = "Ошибка сервиса: "+ТекстОтвета;
	ВызватьИсключение "";	
КонецЕсли;   

Чтение = Новый ЧтениеJSON;
Чтение.УстановитьСтроку(ТекстОтвета);
СтруктураОтвета = ПрочитатьJSON(Чтение);	
Чтение.Закрыть();

Если СтруктураОтвета.response_status.status_code <> 2000 Тогда 
	Успешно = Ложь; 
	СтрокаОшибок = "Ошибка сервиса: "+ТекстОтвета;
	ВызватьИсключение "";
КонецЕсли;  

Для каждого СтрОтвета из  СтруктураОтвета.execute_query.data Цикл
	НовСтр = ТЗ.Добавить();
	НовСтр.Система = СистемаGUID; 
		
	НовСтр.id = СтрОтвета.id;
	НовСтр.UUID = СистемаGUID + СтрОтвета.id;
	
	Если СтрОтвета.Свойство("issueId") Тогда 
		НовСтр.issueId = XMLСтрока(СтрОтвета.issueId); 
	КонецЕсли;
	
	Если СтрОтвета.Свойство("timeM") Тогда 
		НовСтр.timeM = СтрОтвета.timeM; 
	КонецЕсли;
		
	started = Лев(XMLСтрока(СтрОтвета.started),СтрДлина(XMLСтрока(СтрОтвета.started))-3);  
	НовСтр.started = МестноеВремя(\u002719700101\u0027+Число(started));
    
    Если СтрОтвета.updated <> 0 Тогда	
		updated = Лев(XMLСтрока(СтрОтвета.updated),СтрДлина(XMLСтрока(СтрОтвета.updated))-3); 
		НовСтр.updated = МестноеВремя(\u002719700101\u0027+Число(updated));  
	Иначе
		НовСтр.updated = НовСтр.started;	
	КонецЕсли;
		 
	Если СтрОтвета.Свойство("comment") Тогда 
		НовСтр.comment = СтрОтвета.comment; 
	КонецЕсли;
	
	Если СтрОтвета.Свойство("authorName") Тогда 
		НовСтр.authorName = СтрОтвета.authorName; 
	КонецЕсли;  
	
	Если СтрОтвета.Свойство("updateAuthorName") Тогда 
		НовСтр.updateAuthorName = СтрОтвета.updateAuthorName; 
	КонецЕсли;
	
	Если СтрОтвета.Свойство("authorId") Тогда 
		НовСтр.authorId = СтрОтвета.authorId; 
	КонецЕсли; 
	
	Если СтрОтвета.Свойство("updateAuthorId") Тогда 
		НовСтр.updateAuthorId = СтрОтвета.updateAuthorId; 
	КонецЕсли;
	  
	Если СтрОтвета.Свойство("IssueNumber") Тогда 
		НовСтр.IssueNumber = СтрОтвета.IssueNumber; 
	КонецЕсли;
	
	Если СтрОтвета.Свойство("IssueSubject") Тогда 
		НовСтр.IssueSubject = СтрОтвета.IssueSubject; 
	КонецЕсли;
		
КонецЦикла; 


//-------------------------------------------------------------------- 
//Запись в DWH
//--------------------------------------------------------------------
Если Не Отладка Тогда
	  
	ПараметрыЗаписиВSQL = DT_DWH.ПараметрыЗаписиВSQL();
	ПараметрыЗаписиВSQL.ТЗ = ТЗ; 
	ПараметрыЗаписиВSQL.ИмяТаблицы = "EmployeeWorklog"; 
	ПараметрыЗаписиВSQL.Ключи.Добавить("UUID");
	ПараметрыЗаписиВSQL.СвойстваДляСравнения.Добавить("updated");
		
	СтруктураОтвета = DT_DWH.ЗаписатьТЗВSQL(СоединениеDWH,ПараметрыЗаписиВSQL);
	   
	Обработано = ТЗ.Количество();
	Добавлено = СтруктураОтвета.Добавлено;
	Обновлено = СтруктураОтвета.Обновлено; 
	
КонецЕсли;

СтрокаОшибок = СтрокаОшибок + ?(СтрокаОшибок="","",Символы.ПС)+ Система +  " Обработано - "+Обработано+". Добавлено - "+Добавлено+". Обновлено - "+Обновлено;
 
Если Успешно и не Отладка  Тогда
	УстановитьДатуПоследнейЗагрузки(Система,ЗапросСсылка,ДатаЗагрузки);
КонецЕсли; ',
  'Комментарий': 'тестировать можно тут: https://tash-sd.t-medica.com/SetUpWizard.do?forwardTo=apidoc'
 },
 'ТЧ': [
  {
   'Переменные': [
    {
     'Имя': 'СоединениеDWH',
     'Разделитель': null,
     'ЗначениеСтрока': '',
     'Комментарий': ''
    }
   ]
  }
 ]
}
