{
 'Реквизиты': {
  'Наименование': 'Выгрузка из SD в yougile',
  'ТекстОбработки': '//-------------------------------------------------------------------- 
//Параметры
//--------------------------------------------------------------------
КоличествоЗаявокВМинуту = 25;

Отладка = Ложь; ОтладкаIDSD = 4953;

 
IDСтикераПриоритет = "22eb90b3-500c-4102-9050-6b90368eb33d";
//IDСтикераИсполнитель = "017dad3c-dd70-4f08-8430-c796685166fb";   - пока не поддерживается api
СоответствиеПриоритетов = Новый соответствие();
СоответствиеПриоритетов.Вставить(1,"cd7830f10ddc"); 
СоответствиеПриоритетов.Вставить(2,"81204f2f8a49");
СоответствиеПриоритетов.Вставить(3,"37ba42e9fcf2"); 
СоответствиеПриоритетов.Вставить(4,"0e0a140fe53f");
СоответствиеПриоритетов.Вставить("","-"); 
СоответствиеПриоритетов.Вставить("0","-");
СоответствиеПриоритетов.Вставить(0,"-");

СоответствиеСтатусов = Новый ТаблицаЗначений;
СоответствиеСтатусов.Колонки.Добавить("СтатусSD");
СоответствиеСтатусов.Колонки.Добавить("СтатусYougile");
СоответствиеСтатусов.Колонки.Добавить("АрхивYougile"); 
СоответствиеСтатусов.Колонки.Добавить("ВыполненоYougile");
СоответствиеСтатусов.Колонки.Добавить("УточнениеПоСтатусам");	
НовСтр = СоответствиеСтатусов.Добавить(); НовСтр.СтатусSD = "UAT"; НовСтр.СтатусYougile = "0a2640ac-f979-4a1d-ba2f-4dc96adc457e"; НовСтр.АрхивYougile = Ложь; НовСтр.ВыполненоYougile = Ложь;  //Приемка
НовСтр = СоответствиеСтатусов.Добавить(); НовСтр.СтатусSD = "В работе"; НовСтр.СтатусYougile = "52603026-62b8-4382-851e-edb087767897"; НовСтр.АрхивYougile = Ложь; НовСтр.ВыполненоYougile = Ложь; //В работе
НовСтр = СоответствиеСтатусов.Добавить(); НовСтр.СтатусSD = "Внедрен"; НовСтр.СтатусYougile = "200bc9ff-0b07-4658-940c-e09fbd7025b9"; НовСтр.АрхивYougile = Ложь; НовСтр.ВыполненоYougile = Ложь; //в релиз
НовСтр = СоответствиеСтатусов.Добавить(); НовСтр.СтатусSD = "Задачи в работе"; НовСтр.СтатусYougile = "52603026-62b8-4382-851e-edb087767897"; НовСтр.АрхивYougile = Ложь; НовСтр.ВыполненоYougile = Ложь; //В работе
НовСтр = СоответствиеСтатусов.Добавить(); НовСтр.СтатусSD = "К релизу"; НовСтр.СтатусYougile = "200bc9ff-0b07-4658-940c-e09fbd7025b9"; НовСтр.АрхивYougile = Ложь; НовСтр.ВыполненоYougile = Ложь; //в релиз
НовСтр = СоответствиеСтатусов.Добавить(); НовСтр.СтатусSD = "Назначен"; НовСтр.СтатусYougile = "f2003a95-5776-4da0-b0a9-9a09fb44921d"; НовСтр.АрхивYougile = Ложь; НовСтр.ВыполненоYougile = Ложь; //На комитет
НовСтр = СоответствиеСтатусов.Добавить(); НовСтр.СтатусSD = "Ожидание ответа от пользователя"; НовСтр.СтатусYougile = "08da15c8-2364-4fad-9b9b-c3b800afe240"; НовСтр.АрхивYougile = Ложь; НовСтр.ВыполненоYougile = Ложь; //Уточнение и сбор требований
НовСтр = СоответствиеСтатусов.Добавить(); НовСтр.СтатусSD = "Ожидание третьей стороны"; НовСтр.СтатусYougile = "08da15c8-2364-4fad-9b9b-c3b800afe240"; НовСтр.АрхивYougile = Ложь; НовСтр.ВыполненоYougile = Ложь;  //Уточнение и сбор требований
НовСтр = СоответствиеСтатусов.Добавить(); НовСтр.СтатусSD = "Открыт"; НовСтр.СтатусYougile = "f2003a95-5776-4da0-b0a9-9a09fb44921d"; НовСтр.АрхивYougile = Ложь; НовСтр.ВыполненоYougile = Ложь; //На комитет
НовСтр = СоответствиеСтатусов.Добавить(); НовСтр.СтатусSD = "Приостановлен (по согласованию)"; НовСтр.СтатусYougile = "f2003a95-5776-4da0-b0a9-9a09fb44921d"; НовСтр.АрхивYougile = Ложь; НовСтр.ВыполненоYougile = Ложь; //На комитет
НовСтр = СоответствиеСтатусов.Добавить(); НовСтр.СтатусSD = "Ревью"; НовСтр.СтатусYougile = "52603026-62b8-4382-851e-edb087767897"; НовСтр.АрхивYougile = Ложь; НовСтр.ВыполненоYougile = Ложь; //В работе
НовСтр = СоответствиеСтатусов.Добавить(); НовСтр.СтатусSD = "Тестирование"; НовСтр.СтатусYougile = "52603026-62b8-4382-851e-edb087767897"; НовСтр.АрхивYougile = Ложь; НовСтр.ВыполненоYougile = Ложь; //В работе
НовСтр = СоответствиеСтатусов.Добавить(); НовСтр.СтатусSD = "Закрыт"; НовСтр.СтатусYougile = "200bc9ff-0b07-4658-940c-e09fbd7025b9"; НовСтр.АрхивYougile = Истина; НовСтр.ВыполненоYougile = Истина; //в релиз
НовСтр = СоответствиеСтатусов.Добавить(); НовСтр.СтатусSD = "Отменен"; НовСтр.СтатусYougile = "091d78c4-46b8-4509-89de-ee7716a06820"; НовСтр.АрхивYougile = Истина; НовСтр.ВыполненоYougile = Ложь; //Отклонено
НовСтр = СоответствиеСтатусов.Добавить(); НовСтр.СтатусSD = "Решен"; НовСтр.СтатусYougile = "200bc9ff-0b07-4658-940c-e09fbd7025b9"; НовСтр.АрхивYougile = Ложь; НовСтр.ВыполненоYougile = Истина; //в релиз
НовСтр = СоответствиеСтатусов.Добавить(); НовСтр.СтатусSD = "Разработка ТЗ"; НовСтр.СтатусYougile = "08da15c8-2364-4fad-9b9b-c3b800afe240"; НовСтр.АрхивYougile = Ложь; НовСтр.ВыполненоYougile = Ложь; //Уточнение и сбор требований
 
//Ессли заявке установлен статус, то она переходит из статуса "На комитете" в "уточнение и сбор требований" 
Статус_НаКомитет = "f2003a95-5776-4da0-b0a9-9a09fb44921d";
КудаПеремещатьИзКомитета = "45fa230e-199a-421f-b07d-33f8ae0a9f0d"; //Утверждено комитетом
	
//-------------------------------------------------------------------- 
//Вычисляемые параметры
//--------------------------------------------------------------------
ОбработаноSD = 0;
ДобавленоYougile = 0;
ИзмененоYougile = 0;
УдаленоYougile = 0;

ДатаЗагрузкиС = ПолучитьДанныеПоследнейВыгрузки(Система,ЗапросСсылка).Дата;
ДатаВыгрузки = ТекущаяДата();

 
СоединениеDWH = ПолучитьЗначениеПеременной(Переменные,"СоединениеDWH");
Если СоединениеDWH = неопределено Тогда
	ВызватьИсключение "Не заполнен параметр СоединениеDWH";
КонецЕсли;  
//ИмяБазыDWH = СоединениеDWH.Владелец.ИмяБД;
СоединениеDWH = ПолучитьСоединениеПоПодключению(СоединениеDWH,СтрокаОшибок);
Если СоединениеDWH = неопределено Тогда
	ВызватьИсключение "Не выполнено соединение к DWH";
КонецЕсли; 
 

СоединениеYougile = ПолучитьЗначениеПеременной(Переменные,"СоединениеYougile");
Если СоединениеYougile = неопределено Тогда
	ВызватьИсключение "Не заполнен параметр СоединениеYougile";
КонецЕсли;
СоединениеYougile = ПолучитьСоединениеПоПодключению(СоединениеYougile,СтрокаОшибок);
Если СоединениеYougile = неопределено Тогда
	ВызватьИсключение "Не выполнено соединение к Yougile";
КонецЕсли; 
 
//----------------------------------------------------------------------------------- 
//1. Получение данных из DWH
//----------------------------------------------------------------------------------- 
//[todo] - можно фильтрануть только по тем заявкам SD, которые были изменены
СоответствиеID = Новый Соответствие();
ТекстЗапросаSQL = "
	|  SELECT [IdSD]
	|      ,[IdYougile]
	|  FROM [matchingID_SD_Yougile]"; 
ЗаписиSQL = СоединениеDWH.Execute(ТекстЗапросаSQL);		
Пока ЗаписиSQL.EOF = 0 Цикл
	СоответствиеID.Вставить(ЗаписиSQL.Fields("IdSD").Value,ЗаписиSQL.Fields("IdYougile").Value); 
	ЗаписиSQL.MoveNext();
КонецЦикла;
	
//----------------------------------------------------------------------------------- 
//2. Получение данных из SD+ и преобразование данных
//-----------------------------------------------------------------------------------
МассивДанныхИзSD = Новый массив;
//текст запроса можно получить из запроса SD по кнопке. Затем его надо обработать - убрать кавычки, можно запихнуть в онлайн форматирование sql запросов
	//для теста запроса можно использовать  https://tash-sd.t-medica.com/SetUpWizard.do?forwardTo=apidoc, внизу есть тест. Текст запроса передавать в одну строку	
	
ДатаСФормат = Формат(УниверсальноеВремя(ДатаЗагрузкиС) - \u002719700101\u0027, "ЧГ=0")+"000";
//ДатаСозданиеС = Формат(УниверсальноеВремя(Дата(2023,5,1)) - \u002719700101\u0027, "ЧГ=0")+"000";
	
УсловияЧтоЭтоЗапросДляКомитета = "(rtdef.NAME = N\u0027Запрос на изменение\u0027 
		|			AND ( qd.QUEUENAME = N\u0027ГЛН 1С\u0027 OR qd.QUEUENAME = N\u0027ДТ НРИС\u0027 )
		|			AND (sdo.NAME LIKE N\u0027%ГАЛЕН%\u0027)
		//|			AND (wo.CREATEDTIME >= "+ДатаСозданиеС+"  AND wo.CREATEDTIME != 0)
		|			AND (wof.UDF_CHAR15 IS NULL OR (wof.UDF_CHAR15 != N\u0027Внутренняя (Без SLA)\u0027  AND wof.UDF_CHAR15 != N\u0027Изменение по инциденту\u0027 AND wof.UDF_CHAR15 != N\u0027Стандартное изменение\u0027)))";

СтрокаТелаЗапроса = 
	"SELECT wo.WORKORDERID AS id,
	|		 wo.CREATEDTIME AS CREATEDTIME,
	|		 std.STATUSNAME AS Status,
	|		 aau.FIRST_NAME AS \u0027Автор\u0027,
	|		 dpt.DEPTNAME AS DEPTNAME,
	|		 wo.TITLE AS Title,
	|		 ti.FIRST_NAME AS \u0027Специалист\u0027,
	|		 wotodesc.FULLDESCRIPTION AS FULLDESCRIPTION,
	|		 wof.UDF_LONG1 AS Priority1C,
	|		 wos.LAST_TECH_UPDATE as updated,
	//|		 wof.UDF_CHAR17 AS IDyougile,	
	|		 case when ("+УсловияЧтоЭтоЗапросДляКомитета+") then 1 else 0 end AS ForYougile,
	|		 wo.DUEBYTIME AS DUEBYTIME
	|FROM WorkOrder wo
	|LEFT JOIN SDUser sdu
	|	ON wo.REQUESTERID=sdu.USERID
	|LEFT JOIN AaaUser aau
	|	ON sdu.USERID=aau.USER_ID
	|LEFT JOIN DepartmentDefinition dpt
	|	ON wo.DEPTID=dpt.DEPTID
	|LEFT JOIN WorkOrderStates wos
	|	ON wo.WORKORDERID=wos.WORKORDERID
	|LEFT JOIN SDUser td
	|	ON wos.OWNERID=td.USERID
	|LEFT JOIN AaaUser ti
	|	ON td.USERID=ti.USER_ID
	|LEFT JOIN StatusDefinition std
	|	ON wos.STATUSID=std.STATUSID
	|LEFT JOIN RequestTypeDefinition rtdef
	|	ON wos.REQUESTTYPEID=rtdef.REQUESTTYPEID
	|LEFT JOIN WorkOrder_Fields wof
	|	ON wo.WORKORDERID=wof.WORKORDERID
	|LEFT JOIN WorkOrder_Queue woq
	|	ON wo.WORKORDERID=woq.WORKORDERID
	|LEFT JOIN QueueDefinition qd
	|	ON woq.QUEUEID=qd.QUEUEID
	|LEFT JOIN WorkOrderToDescription wotodesc
	|	ON wo.WORKORDERID=wotodesc.WORKORDERID 
	|LEFT JOIN SiteDefinition siteDef 
	|	ON wo.SITEID=siteDef.SITEID
	|LEFT JOIN SDOrganization sdo 
	|	ON siteDef.SITEID=sdo.ORG_ID
	|WHERE 
	|	wo.ISPARENT=\u00271\u0027
	|	AND wos.LAST_TECH_UPDATE >= "+ДатаСФормат+" 
	|	AND wos.LAST_TECH_UPDATE != 0
	|	AND wos.LAST_TECH_UPDATE IS NOT NULL
	//|	AND (
	//|			( "+УсловияЧтоЭтоЗапросДляКомитета+" )
	//|		OR 
	//|			(NOT wof.UDF_CHAR17 IS NULL AND wof.UDF_CHAR17 != \u0027\u0027) 
	//|		)	 ";
	|ORDER BY LAST_TECH_UPDATE";
		
	//Обрезать переносы строк
	СтрокаТелаЗапроса = СтрЗаменить(СтрокаТелаЗапроса,Символы.ПС," ");
	
	//Если Отладка Тогда Сообщить(СтрокаТелаЗапроса); КонецЕсли;
	
	//обернуть в запрос
	СтрокаТелаЗапроса ="{""query"": """+СтрокаТелаЗапроса+""" }"; 
	
	//так как передаем по url, то кодируем строку
	СтрокаТелаЗапроса = КодироватьСтроку(СтрокаТелаЗапроса, СпособКодированияСтроки.КодировкаURL);		 

	HTTPЗапрос = Новый HTTPЗапрос("/api/v3/reports/execute_query?input_data="+СтрокаТелаЗапроса);
	HTTPЗапрос.Заголовки = Соединение.Заголовки;
	//HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаТелаЗапроса);
	Результат = Соединение.HTTPСоединение.ВызватьHTTPМетод("POST", HTTPЗапрос); 
		 
	ТекстОтвета = Результат.ПолучитьТелоКакСтроку();
	
	//Если Отладка Тогда Сообщить(ТекстОтвета); КонецЕсли;
	
	Если СтрНачинаетсяС(ТекстОтвета,"<?xml") Тогда
		СтрокаОшибок = "Ошибка сервиса: "+ТекстОтвета;
		ВызватьИсключение "";	
	КонецЕсли;
	
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(ТекстОтвета);
	СтруктураОтвета = ПрочитатьJSON(Чтение);	
	Чтение.Закрыть();
	 	 
	Если СтруктураОтвета.response_status.status_code <> 2000 Тогда 
		СтрокаОшибок = "Ошибка сервиса: "+ТекстОтвета;
		ВызватьИсключение "";
	КонецЕсли;  
	
	СтруктураСтрокиИзSD = Новый ФиксированнаяСтруктура("ID,IdYougile,Режим,title,columnId,PriorityID,description,archived,completed,ИсполнительФамилия");	
	Для каждого СтрОтвета из СтруктураОтвета.execute_query.data Цикл
		Если Отладка И СтрОтвета.id <> ОтладкаIDSD Тогда
			Продолжить;
		КонецЕсли;
		 
		ОбработаноSD = ОбработаноSD + 1;
	    IdYougile = СоответствиеID.Получить(СтрОтвета.id); 
	    ForYougile = (СтрОтвета.ForYougile=1);
	    
	    Если ЗначениеЗаполнено(IdYougile) Тогда
	    	//было выгружено ранее 
	    	Если ForYougile Тогда
	    		Режим = "Обновить";
	    	Иначе
	    		Режим = "Удалить";
	    	КонецЕсли;
	    Иначе   
	    	//не было выгружено
	    	Если ForYougile Тогда
	    		Режим = "Создать";
	    	Иначе
	    		//не надо выгружать;
	    		Продолжить;
	    	КонецЕсли;
	    КонецЕсли;
	    
	    
	    НовСтруктураСтроки = Новый структура(СтруктураСтрокиИзSD);
	    НовСтруктураСтроки.Режим = Режим;
	    НовСтруктураСтроки.id = СтрОтвета.id;
	    НовСтруктураСтроки.IdYougile = IdYougile;
	   	Если СтрОтвета.Свойство("Title") Тогда 
			НовСтруктураСтроки.Title = XMLСтрока(СтрОтвета.id)+" - "+СтрОтвета.Title;
		Иначе
			НовСтруктураСтроки.Title = XMLСтрока(СтрОтвета.id); 
		КонецЕсли;
		
		Если СтрОтвета.Свойство("Priority1C") Тогда
			Priority1C = СтрОтвета.Priority1C; 
		Иначе
			Priority1C = 0;
		КонецЕсли;
		    
		PriorityID = СоответствиеПриоритетов.Получить(Priority1C); 
		Если PriorityID = Неопределено Тогда
			СтрокаОшибок = СтрокаОшибок + "не задано соответствие приоритету "+Priority1C;
			ВызватьИсключение "";	
		КонецЕсли;
		НовСтруктураСтроки.PriorityID = PriorityID;  
		
		
	    Если СтрОтвета.Свойство("Специалист") Тогда
	    	Поз=СтрНайти(СтрОтвета.Специалист," ");
	    	Если Поз = 0 Тогда   
	    		НовСтруктураСтроки.ИсполнительФамилия = СтрОтвета.Специалист;
	    	Иначе    
	    		НовСтруктураСтроки.ИсполнительФамилия = Лев(СтрОтвета.Специалист,Поз-1);
	   		КонецЕсли;
		Иначе
			НовСтруктураСтроки.ИсполнительФамилия = "";
		КонецЕсли; 
	
		
	    //данные по статусу
		СтатусSD = XMLСтрока(СтрОтвета.Status);		 
	    СтрокаСоответствий = СоответствиеСтатусов.Найти(СтатусSD,"СтатусSD");
		Если СтрокаСоответствий = Неопределено Тогда
			СтрокаОшибок = СтрокаОшибок + "не задано соответствие статусу "+СтатусSD;
			ВызватьИсключение "";
		КонецЕсли; 
	    	    		
		НовСтруктураСтроки.columnId = СтрокаСоответствий.СтатусYougile;
		   
		//Уточнение по статусам
		Если НовСтруктураСтроки.columnId = Статус_НаКомитет И ЗначениеЗаполнено(Priority1C) И Priority1C <> "0" Тогда 
			 НовСтруктураСтроки.columnId= КудаПеремещатьИзКомитета;	
		КонецЕсли;
		 
		   
		СсылкаНаЗаявкуSD = "https://tash-sd.t-medica.com/WorkOrder.do?woMode=viewWO&woID="+XMLСтрока(СтрОтвета.id); 
		НовСтруктураСтроки.description = "<a href="""+СсылкаНаЗаявкуSD+""">"+XMLСтрока(СтрОтвета.id)+"</a>";
		Если СтрОтвета.Свойство("CREATEDTIME") И ЗначениеЗаполнено(СтрОтвета.CREATEDTIME) Тогда	
			мТекДатаСтрока = Лев(XMLСтрока(СтрОтвета.CREATEDTIME),СтрДлина(XMLСтрока(СтрОтвета.CREATEDTIME))-3); 
			мТекДата = МестноеВремя(\u002719700101\u0027+Число(мТекДатаСтрока));  
	        НовСтруктураСтроки.description = НовСтруктураСтроки.description + "<br>Дата создания: "+ мТекДата;
		КонецЕсли;
		Если СтрОтвета.Свойство("Автор") Тогда
			НовСтруктураСтроки.description = НовСтруктураСтроки.description + "<br>Автор: "+ СтрОтвета.Автор; 
		КонецЕсли;
		Если СтрОтвета.Свойство("Специалист") Тогда
			НовСтруктураСтроки.description = НовСтруктураСтроки.description + "<br>Специалист: "+ СтрОтвета.Специалист; 
		КонецЕсли;
		//Если СтрОтвета.Свойство("FULLDESCRIPTION") Тогда
		//	НовСтруктураСтроки.description = НовСтруктураСтроки.description + "<br><br>Описание: "+ СтрОтвета.FULLDESCRIPTION; 
		//КонецЕсли;
		
		       
		НовСтруктураСтроки.archived = СтрокаСоответствий.АрхивYougile; 
		НовСтруктураСтроки.completed = СтрокаСоответствий.ВыполненоYougile;
				
		МассивДанныхИзSD.Добавить(НовСтруктураСтроки);
		
	КонецЦикла;  
		 	
	
//----------------------------------------------------------------------------------- 
//3. Отправка данных в Yougile и сохранение соответствий ID
//-----------------------------------------------------------------------------------
КолВо = 0;
Для каждого ДанныеОтправки из МассивДанныхИзSD Цикл
	КолВо = КолВо + 1;
	
	Если КолВо % КоличествоЗаявокВМинуту = 0 Тогда
		//прервать;  //отладка, не ждать минуту, просто останвоиться 
		Сообщить("Пауза в 1 минуту");
		scr = Новый COMОбъект("WScript.Shell");
		scr.Run("ping 127.0.0.1 -n 60",0,1); 		
	КонецЕсли;  	
	
	IDYougile = Неопределено;
	 
	Если ДанныеОтправки.Режим = "Создать" Тогда
		//-----------------------------------------------------------------------------------
		//СОЗДАНИЕ  
		//-----------------------------------------------------------------------------------
		СтруктураJson = Новый Структура;
		СтруктураJson.Вставить("title",ДанныеОтправки.title);	
		СтруктураJson.Вставить("columnId",ДанныеОтправки.columnId);
		СтруктураJson.Вставить("description",ДанныеОтправки.description);
		СтруктураJson.Вставить("archived",ДанныеОтправки.archived);
		СтруктураJson.Вставить("completed",ДанныеОтправки.completed);
		
		stickers = Новый Соответствие();
		Если ДанныеОтправки.PriorityID <> "-" Тогда
			stickers.Вставить(IDСтикераПриоритет,ДанныеОтправки.PriorityID);
		КонецЕсли;
		//Если ЗначениеЗаполнено(ДанныеОтправки.ИсполнительФамилия) Тогда
		//	stickers.Вставить(IDСтикераИсполнитель,ДанныеОтправки.ИсполнительФамилия);
		//КонецЕсли; 
		Если СтруктураJson.Количество() > 0 Тогда 
			СтруктураJson.Вставить("stickers",stickers);
		КонецЕсли;
		
		ЗаписьJSON = Новый ЗаписьJSON;	
		ЗаписьJSON.УстановитьСтроку();
		ЗаписатьJSON(ЗаписьJSON, СтруктураJson);			
		СтрокаТелаЗапроса = ЗаписьJSON.Закрыть();
		
		АдресЗапроса = "/api-v2/tasks";
		HTTPЗапрос = Новый HTTPЗапрос(АдресЗапроса);
		HTTPЗапрос.Заголовки = СоединениеYougile.Заголовки;
		HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаТелаЗапроса);
		Результат = СоединениеYougile.HTTPСоединение.ВызватьHTTPМетод("POST", HTTPЗапрос);
		ТекстОтвета = Результат.ПолучитьТелоКакСтроку();
		ТекЛогЗапроса =  "Ошибка API Yougile. Режим = "+ДанныеОтправки.Режим+", адрес запроса: "+АдресЗапроса+" . Текст запроса: "+Символы.ПС + СтрокаТелаЗапроса + Символы.ПС + "Код ответа:"+Результат.КодСостояния+", текст ответа: "+ТекстОтвета;
		Если Результат.КодСостояния = 201 Тогда
			Чтение = Новый ЧтениеJSON;
			Чтение.УстановитьСтроку(ТекстОтвета);
			СтруктураОтвета = ПрочитатьJSON(Чтение);	
			Чтение.Закрыть();
			Если СтруктураОтвета.Свойство("id") И ЗначениеЗаполнено(СтруктураОтвета.id) Тогда
				//Новый номер 
				IDYougile = XMLСтрока(СтруктураОтвета.id); 
				
				//-----------------------------------------------------------------------------------
				//Обновление соответствий ID
				//-----------------------------------------------------------------------------------
				СоединениеDWH.Execute("INSERT [matchingID_SD_Yougile] (IdSD,IdYougile) VALUES("+XMLСтрока(ДанныеОтправки.ID)+",\u0027"+IDYougile+"\u0027)");
					
			Иначе  
				СтрокаОшибок = СтрокаОшибок+ТекЛогЗапроса +". Не найдено поле ID  в ответе";
				ВызватьИсключение "";	
			КонецЕсли;	
		Иначе 
			СтрокаОшибок = СтрокаОшибок + ТекЛогЗапроса;
			ВызватьИсключение "";
		КонецЕсли;
			
		ДобавленоYougile = ДобавленоYougile + 1;	
	ИначеЕсли ДанныеОтправки.Режим = "Обновить" Тогда 
		//-----------------------------------------------------------------------------------
		//ОБНОВЛЕНИЕ  
		//-----------------------------------------------------------------------------------
		СтруктураJson = Новый Структура;
		СтруктураJson.Вставить("title",ДанныеОтправки.title);	
		СтруктураJson.Вставить("columnId",ДанныеОтправки.columnId);
		СтруктураJson.Вставить("description",ДанныеОтправки.description);
		СтруктураJson.Вставить("archived",ДанныеОтправки.archived);
		СтруктураJson.Вставить("completed",ДанныеОтправки.completed);
		stickers = Новый Соответствие();
		stickers.Вставить(IDСтикераПриоритет,ДанныеОтправки.PriorityID);
		//stickers.Вставить(IDСтикераИсполнитель,ДанныеОтправки.ИсполнительФамилия);
		СтруктураJson.Вставить("stickers",stickers);
		
		ЗаписьJSON = Новый ЗаписьJSON;	
		ЗаписьJSON.УстановитьСтроку();
		ЗаписатьJSON(ЗаписьJSON, СтруктураJson);			
		СтрокаТелаЗапроса = ЗаписьJSON.Закрыть();
		 
		АдресЗапроса = "/api-v2/tasks/"+XMLСтрока(ДанныеОтправки.IdYougile);
		HTTPЗапрос = Новый HTTPЗапрос(АдресЗапроса);
		HTTPЗапрос.Заголовки = СоединениеYougile.Заголовки;
		HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаТелаЗапроса);
		Результат = СоединениеYougile.HTTPСоединение.ВызватьHTTPМетод("PUT", HTTPЗапрос);
		ТекстОтвета = Результат.ПолучитьТелоКакСтроку();
		ТекЛогЗапроса =  "Ошибка API Yougile. Режим = "+ДанныеОтправки.Режим+", адрес запроса: "+АдресЗапроса+" . Текст запроса: "+Символы.ПС + СтрокаТелаЗапроса + Символы.ПС + "Код ответа:"+Результат.КодСостояния+", текст ответа: "+ТекстОтвета;

		Если Результат.КодСостояния = 200 Тогда
			Чтение = Новый ЧтениеJSON;
			Чтение.УстановитьСтроку(ТекстОтвета);
			СтруктураОтвета = ПрочитатьJSON(Чтение);	
			Чтение.Закрыть();
			Если СтруктураОтвета.Свойство("id") И ЗначениеЗаполнено(СтруктураОтвета.id) Тогда
				//Все ОК	
			Иначе  
				СтрокаОшибок = СтрокаОшибок+ТекЛогЗапроса +". Не найдено поле ID  в ответе";
				ВызватьИсключение "";	
			КонецЕсли;	
		Иначе 
			СтрокаОшибок = СтрокаОшибок + ТекЛогЗапроса;
			ВызватьИсключение "";
		КонецЕсли;
		 
		ИзмененоYougile = ИзмененоYougile + 1;
	ИначеЕсли ДанныеОтправки.Режим = "Удалить" Тогда 
		//-----------------------------------------------------------------------------------
		//УДАЛЕНИЕ  
		//-----------------------------------------------------------------------------------
		СтруктураJson = Новый Структура;
		СтруктураJson.Вставить("deleted",Истина);	
		ЗаписьJSON = Новый ЗаписьJSON;	
		ЗаписьJSON.УстановитьСтроку();
		ЗаписатьJSON(ЗаписьJSON, СтруктураJson);			
		СтрокаТелаЗапроса = ЗаписьJSON.Закрыть();
		
		АдресЗапроса = "/api-v2/tasks/"+XMLСтрока(ДанныеОтправки.IdYougile);
		HTTPЗапрос = Новый HTTPЗапрос(АдресЗапроса);
		HTTPЗапрос.Заголовки = СоединениеYougile.Заголовки;
		HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаТелаЗапроса);
		Результат = СоединениеYougile.HTTPСоединение.ВызватьHTTPМетод("PUT", HTTPЗапрос);
		ТекстОтвета = Результат.ПолучитьТелоКакСтроку();
		ТекЛогЗапроса =  "Ошибка API Yougile. Режим = "+ДанныеОтправки.Режим+", адрес запроса: "+АдресЗапроса+" . Текст запроса: "+Символы.ПС + СтрокаТелаЗапроса + Символы.ПС + "Код ответа:"+Результат.КодСостояния+", текст ответа: "+ТекстОтвета;
		Если Результат.КодСостояния = 200 Тогда
			Чтение = Новый ЧтениеJSON;
			Чтение.УстановитьСтроку(ТекстОтвета);
			СтруктураОтвета = ПрочитатьJSON(Чтение);	
			Чтение.Закрыть();
			Если СтруктураОтвета.Свойство("id") И ЗначениеЗаполнено(СтруктураОтвета.id) Тогда
				
				//-----------------------------------------------------------------------------------
				//Обновление соответствий ID
				//-----------------------------------------------------------------------------------
				СоединениеDWH.Execute("DELETE FROM [matchingID_SD_Yougile] WHERE IdSD = "+XMLСтрока(ДанныеОтправки.ID));	
			Иначе  
				СтрокаОшибок = СтрокаОшибок+ТекЛогЗапроса +". Не найдено поле ID  в ответе";
				ВызватьИсключение "";	
			КонецЕсли;	
		Иначе 
			СтрокаОшибок = СтрокаОшибок + ТекЛогЗапроса;
			ВызватьИсключение "";
		КонецЕсли;
						
		УдаленоYougile = УдаленоYougile + 1;
	Иначе
		ВызватьИсключение "Неизвестный режим отправки"; 
	КонецЕсли; 
	
		
	Если Отладка Тогда Прервать; КонецЕсли;
КонецЦикла;     
       
СтрокаОшибок = СтрокаОшибок + " Обработано из SD: "+ОбработаноSD+". Добавлено в Yougile: "+ДобавленоYougile+". Обновлено в Yougile:"+ИзмененоYougile+". Удалено в Yougile:"+УдаленоYougile;
	
	
Если НЕ Отладка Тогда
	УстановитьДатуПоследнейВыгрузки(Система,ЗапросСсылка,ДатаВыгрузки);
КонецЕсли;',
  'Комментарий': 'Логика такая - соответствие гуидов систем хранится в DWH (в идеале хранить в SD, но SD при обновлении требует соблюдения всех контролей заполнения заявки, что не всегда возможно)

Берутся из SD все изменения запросов с даты последней выгрузки: тех запросов, которые раньше были отправлены, или подходят по фильтрам к отправке (заявки на изменения)
Данные преобразуются в формату Yougile и по одному отправляются - обновляют карточкуи или создают новые.
связи id заявок записываются в DWH (пытался в SD, но там через апи идет контроль обязательных значений и это не всегда завершается успешно)'
 },
 'ТЧ': [
  {
   'Переменные': [
    {
     'Имя': 'СоединениеYougile',
     'Разделитель': null,
     'ЗначениеСтрока': '',
     'Комментарий': ''
    },
    {
     'Имя': 'СоединениеDWH',
     'Разделитель': null,
     'ЗначениеСтрока': '',
     'Комментарий': ''
    }
   ]
  }
 ]
}
