{
 'Реквизиты': {
  'Наименование': 'Контроль - ошибки в ключах аналитик',
  'ТекстОбработки': 'Отладка = Ложь;   
ДатаНачалаВыгрузки = ТекущаяДата();
ПочтаПолучателей = "ssmirnov@t-medica.com";
Если Отладка Тогда 
	ПочтаПолучателей = "ssmirnov@t-medica.com";
КонецЕсли;
СимволПереносаСтроки = Символы.ПС + Символы.ВК;
    
    

//------------------------------------------------------------------------------
//Запрос в базу
//------------------------------------------------------------------------------ 
Код1СДляИсистемы = ПолучитьЗначениеПеременной(Переменные,"Код1СДляСистемы");  
СтруктураЗапроса = Новый Структура("value",Код1СДляИсистемы);	
		
ЗаписьJSON = Новый ЗаписьJSON;ЗаписьJSON.УстановитьСтроку();ЗаписатьJSON(ЗаписьJSON, СтруктураЗапроса);			
СтрокаТелаЗапроса = ЗаписьJSON.Закрыть();
	
HTTPЗапрос = Новый HTTPЗапрос(Соединение.АдресЗапроса);     
HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаТелаЗапроса);
HTTPОтвет = Соединение.HTTPСоединение.ВызватьHTTPМетод("POST", HTTPЗапрос); 
РезультатРазбораHTTP = Алгоритм("ПрочитатьОтветСервисаUniversal",HTTPОтвет); 
Если не РезультатРазбораHTTP.Успешно Тогда 
	ВызватьИсключение РезультатРазбораHTTP.Результат;
КонецЕсли;

МассивОшибок = ЗначениеИзСтрокиВнутр(РезультатРазбораHTTP.Результат);

  
/////////////////////////////////Отправка письма, если есть ошибки/////////////////////////////////////
Если МассивОшибок.Количество() > 0 Тогда       
	
    
	ТемаСообщения = "" + Система + " - есть ошибки в ключах аналитик на " + Формат(ДатаНачалаВыгрузки,"ДФ=dd.MM.yyyy");
	ТекстСообщения = "Необходимо сделать исправление ошибок обработкой: e1cib/data/Справочник.Обработки?ref=a12cef295ee2b5a311ed0d878a85324c" + СимволПереносаСтроки
	+ "в некоторых системах, например ERP, в списке ключей в меню ЕЩЕ есть специальная кнопка исправления"
	+ СтрСоединить(МассивОшибок, СимволПереносаСтроки);

	ГуидУчетнойЗаписиПочты = "567e3146-123f-11ed-a12c-ef295ee2b5a3";
	Алгоритм("ОтправитьEmail",ЗапросСсылка,ПочтаПолучателей,ТемаСообщения,ТекстСообщения,ТипТекстаПочтовогоСообщения.РазмеченныйТекст,ГуидУчетнойЗаписиПочты);	      
	СтрокаОшибок = СтрокаОшибок + "Отправлено письмо о необходимости исправить ключи аналитик" + СимволПереносаСтроки; 
Иначе
	Сообщить("Нет ошибок");
КонецЕсли;',
  'Комментарий': ''
 },
 'ТЧ': [
  {
   'Переменные': [
    {
     'Имя': 'Код1СДляСистемы',
     'Разделитель': null,
     'ЗначениеСтрока': 'ТекстОшибок = Новый Массив;

//Добавляем ключи, которые будут анализироваться
Массив = Новый Массив;

//потенциально возможные проверки
ПотенциальныеКлючиДляПроверки = Новый Соответствие;          					
ПотенциальныеКлючиДляПроверки.Вставить("Справочник.КлючиАналитикиУчетаЗатрат", "РегистрСведений.АналитикаУчетаЗатрат"); 					
ПотенциальныеКлючиДляПроверки.Вставить("Справочник.КлючиАналитикиУчетаНДС", "РегистрСведений.АналитикаУчетаНДС");
ПотенциальныеКлючиДляПроверки.Вставить("Справочник.КлючиАналитикиПланированияНоменклатуры", "РегистрСведений.АналитикаПланированияНоменклатуры");
ПотенциальныеКлючиДляПроверки.Вставить("Справочник.КлючиАналитикиПланированияПотребностей", "РегистрСведений.АналитикаПланированияПотребностей");
ПотенциальныеКлючиДляПроверки.Вставить("Справочник.КлючиАналитикиПланированияСтатейБюджетов", "РегистрСведений.АналитикаПланированияСтатейБюджетов");
ПотенциальныеКлючиДляПроверки.Вставить("Справочник.КлючиАналитикиПланированияСтруктуры", "РегистрСведений.АналитикаПланированияСтруктуры"); 
ПотенциальныеКлючиДляПроверки.Вставить("Справочник.КлючиАналитикиУчетаПоПартнерам", "РегистрСведений.АналитикаУчетаПоПартнерам"); 
ПотенциальныеКлючиДляПроверки.Вставить("Справочник.КлючиКонтроляБюджетныхЛимитовРезервов", "РегистрСведений.АналитикаКонтроляБюджетныхЛимитовРезервов");
ПотенциальныеКлючиДляПроверки.Вставить("Справочник.КлючиКонтроляЗадолженностиПоКонтрагенту", "РегистрСведений.АналитикаКонтроляЗадолженностиПоКонтрагенту");
ПотенциальныеКлючиДляПроверки.Вставить("Справочник.КлючиКонтроляПоДоговорам", "РегистрСведений.АналитикаКонтроляПоДоговорам");					
ПотенциальныеКлючиДляПроверки.Вставить("Справочник.КлючиПараметровЗакупки", "РегистрСведений.АналитикаПараметровЗакупки"); 
ПотенциальныеКлючиДляПроверки.Вставить("Справочник.КлючиАналитикиУчетаНаборов", "РегистрСведений.АналитикаУчетаНаборов");
ПотенциальныеКлючиДляПроверки.Вставить("Справочник.КлючиАналитикиУчетаНоменклатуры", "РегистрСведений.АналитикаУчетаНоменклатуры");
ПотенциальныеКлючиДляПроверки.Вставить("Справочник.КлючиАналитикиУчетаПартий", "РегистрСведений.АналитикаУчетаПартий");

//проверим на такие метаданные 
КлючиДляПроверки = Новый Соответствие;
Для каждого КлючИЗначение из ПотенциальныеКлючиДляПроверки Цикл
	ТекКлюч = Неопределено;
	ТекЗначение = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИдентификаторыОбъектовМетаданных.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ИдентификаторыОбъектовМетаданных КАК ИдентификаторыОбъектовМетаданных
		|ГДЕ
		|	ИдентификаторыОбъектовМетаданных.ПолноеИмя = &ПолноеИмя
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИдентификаторыОбъектовРасширений.Ссылка
		|ИЗ
		|	Справочник.ИдентификаторыОбъектовРасширений КАК ИдентификаторыОбъектовРасширений
		|ГДЕ
		|	ИдентификаторыОбъектовРасширений.ПолноеИмя = &ПолноеИмя";
	
	Запрос.УстановитьПараметр("ПолноеИмя", КлючИЗначение.Ключ);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ТекКлюч = Выборка.Ссылка;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИдентификаторыОбъектовМетаданных.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ИдентификаторыОбъектовМетаданных КАК ИдентификаторыОбъектовМетаданных
		|ГДЕ
		|	ИдентификаторыОбъектовМетаданных.ПолноеИмя = &ПолноеИмя
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИдентификаторыОбъектовРасширений.Ссылка
		|ИЗ
		|	Справочник.ИдентификаторыОбъектовРасширений КАК ИдентификаторыОбъектовРасширений
		|ГДЕ
		|	ИдентификаторыОбъектовРасширений.ПолноеИмя = &ПолноеИмя";
	
	Запрос.УстановитьПараметр("ПолноеИмя", КлючИЗначение.Значение);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ТекЗначение = Выборка.Ссылка;
	КонецЕсли;
	
	Если ТекКлюч <> Неопределено и ТекЗначение <> Неопределено Тогда
		КлючиДляПроверки.Вставить(ТекКлюч,ТекЗначение);	
	КонецЕсли;
	
КонецЦикла;
												
      
/////////////////////////////////Дубли ключей///////////////////////////////////////////////////      
      
МассивЗапросов = Новый Массив;
Для каждого КлючИЗначениеПроверки Из КлючиДляПроверки Цикл 
	ЗапросТекст = "ВЫБРАТЬ ПЕРВЫЕ 1
                  |	КлючиСДублями.КлючиАналитик КАК КлючиАналитик
                  |ИЗ
                  |	(ВЫБРАТЬ
                  |		""&ПолноеИмяОбъектаМетаданных"" КАК КлючиАналитик,
                  |		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТекущийСправочник.Ссылка) КАК Количество,
                  |		&ПоляСправочника
                  |	ИЗ
                  |		&ПолноеИмяОбъектаМетаданных КАК ТекущийСправочник
                  |	
                  |	СГРУППИРОВАТЬ ПО
                  |		&ПоляСправочника
                  |	
                  |	ИМЕЮЩИЕ
                  |		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТекущийСправочник.Ссылка) > 1) КАК КлючиСДублями";

	ЗапросТекст = СтрЗаменить(ЗапросТекст, "&ПолноеИмяОбъектаМетаданных", КлючИЗначениеПроверки.Ключ.ПолноеИмя);	 

	ТекущийСправочник = ОбщегоНазначения.ОбъектМетаданныхПоИдентификатору(КлючИЗначениеПроверки.Ключ);

	ШаблонПолей = "ТекущийСправочник.%1";
    МассивПолей = Новый Массив;
	Для каждого Реквизит Из ТекущийСправочник.Реквизиты Цикл
		МассивПолей.Добавить(СтрШаблон(ШаблонПолей, Реквизит.Имя));   
	КонецЦикла;	            
	ПоляСправочника = СтрСоединить(МассивПолей, ",");        
	
	ЗапросТекст = СтрЗаменить(ЗапросТекст, "&ПоляСправочника", ПоляСправочника);	 

	МассивЗапросов.Добавить(ЗапросТекст);
КонецЦикла;   

Запрос = Новый запрос;
Запрос.Текст = СтрСоединить(МассивЗапросов, " ОБЪЕДИНИТЬ ВСЕ ");
Выборка = Запрос.Выполнить();
Если НЕ Выборка.Пустой() Тогда  
	ТекстОшибок.Добавить("- Есть дубли ключей аналитик");
КонецЕсли;

/////////////////////////////////Ошибки в РС Аналитик///////////////////////////////////////////////////
МассивЗапросов = Новый Массив;
Для каждого КлючИЗначениеПроверки Из КлючиДляПроверки Цикл 
	ЗапросТекст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
                |	""&ПолноеИмяОбъектаМетаданных"" КАК РегистрСведений,
                |	""&ИмяОбъектаМетаданных"" КАК ИмяРегистраСведений,
				|	РСАналитик.КлючАналитики КАК КлючАналитики
				|ИЗ
				|	&ПолноеИмяОбъектаМетаданных КАК РСАналитик
				|ГДЕ
				|	НЕ(&ПоляРавенстваИзмеренийАналитикИКлюча)";

	ЗапросТекст = СтрЗаменить(ЗапросТекст, "&ПолноеИмяОбъектаМетаданных", КлючИЗначениеПроверки.Значение.ПолноеИмя);	 
	ЗапросТекст = СтрЗаменить(ЗапросТекст, "&ИмяОбъектаМетаданных", КлючИЗначениеПроверки.Значение.Имя);	 

	ТекущийРС = ОбщегоНазначения.ОбъектМетаданныхПоИдентификатору(КлючИЗначениеПроверки.Значение);

	ШаблонУсловий = "РСАналитик.%1 = РСАналитик.КлючАналитики.%1";
    МассивУсловий = Новый Массив;
	Для каждого Измерение Из ТекущийРС.Измерения Цикл
		МассивУсловий.Добавить(СтрШаблон(ШаблонУсловий, Измерение.Имя));   
	КонецЦикла;	            
	ПоляРавенстваИзмеренийАналитикИКлюча = СтрСоединить(МассивУсловий, " И ");        
	
	ЗапросТекст = СтрЗаменить(ЗапросТекст, "&ПоляРавенстваИзмеренийАналитикИКлюча", ПоляРавенстваИзмеренийАналитикИКлюча);	 

	МассивЗапросов.Добавить(ЗапросТекст);
КонецЦикла;   

Запрос = Новый запрос;
Запрос.Текст = СтрСоединить(МассивЗапросов, " ОБЪЕДИНИТЬ ВСЕ ");
Выборка = Запрос.Выполнить();
Если НЕ Выборка.Пустой() Тогда  
	ТекстОшибок.Добавить("- Есть неправильные записи о ключах аналитик в РС");
КонецЕсли;

result = ЗначениеВСтрокуВнутр(ТекстОшибок);',
     'Комментарий': ''
    }
   ]
  }
 ]
}
