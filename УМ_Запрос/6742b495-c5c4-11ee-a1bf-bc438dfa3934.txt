{
 'Реквизиты': {
  'Наименование': 'Контроль - сводное заполнение AD (из DWH)',
  'ТекстОбработки': '//-----------------------------------------------------------------
//Параметры выгрузки
//-----------------------------------------------------------------
Отладка = Ложь;
ПочтаПолучателей = "support@t-medica.com;ssmirnov@t-medica.com";   
	 
ГуидУчетнойЗаписиПочты = "567e3146-123f-11ed-a12c-ef295ee2b5a3"; //предопределенная
	 
Если Отладка Тогда 
    ПочтаПолучателей = "ssmirnov@t-medica.com";
КонецЕсли;  

ДатаНачалаВыгрузки = ТекущаяДата();
СимволПереносаСтроки = Символы.ПС; //+ Символы.ВК;
	
//-----------------------------------------------------------------  
//Служебные параметры  
//----------------------------------------------------------------- 
НастройкиAD = Новый Соответствие;
МассивСистемAD = Новый Массив; 

СтрокиТЗ = Переменные.НайтиСтроки(Новый Структура("Имя","СоединениеСAD"));
Для каждого Стр из СтрокиТЗ Цикл 

	//контроль настроек
	Если Стр.Разделитель <> Стр.Значение.Владелец Тогда  
		ВызватьИсключение "Ошибка в настройках - разделитель должен являться системой для подключения";
	КонецЕсли; 
	
	ТекНастройкиAD = Новый структура();
	ТекНастройкиAD.Вставить("Ссылка",Стр.Значение);
	ТекНастройкиAD.Вставить("DC",ПолучитьЗначениеПеременной(Стр.Значение.Переменные,"DC"));
	ТекНастройкиAD.Вставить("OUWorker",ПолучитьЗначениеПеременной(Стр.Значение.Переменные,"OUWorker"));
	
	Если ТекНастройкиAD.DC = Неопределено Тогда ВызватьИсключение "Ошибка настроек "+Стр.Разделитель; КонецЕсли;
	Если ТекНастройкиAD.OUWorker = Неопределено Тогда ВызватьИсключение "Ошибка настроек "+Стр.Разделитель; КонецЕсли;

    
    
    МассивСистемAD.Добавить(Стр.Разделитель);
    
    НастройкиAD.Вставить(Стр.Разделитель,ТекНастройкиAD);
    
КонецЦикла;  

ТемаСообщения = "Неправильно заведенные пользователи AD от "+Формат(ДатаНачалаВыгрузки,"ДФ=dd.MM.yyyy"); 
ТекстСообщения = "Выполняются проверки по системам "+стрСоединить(МассивСистемAD,", ")+" :"+ СимволПереносаСтроки+

	"	1. Не заполнен EmployeeID у активных пользователей в OU работающих сотрудников" +СимволПереносаСтроки+
	"		Решение: заполнить EmployeeID"+СимволПереносаСтроки+
	"	2. Заблокированный пользователь в OU работающих сотрудников"+СимволПереносаСтроки+   
	"		Решение: перенести заблокированного пользователя в OU Disabled"+СимволПереносаСтроки+
	"	3. Уволенный сотрудник в в OU работающих сотрудников" + СимволПереносаСтроки+
	"		Решение: Заблокировать запись или перенести в OU External"+СимволПереносаСтроки+ 
	"	4. Дубли записей с одинаковым EmployeeID в OU работающих сотрудников в одном или разных AD" + СимволПереносаСтроки+
	"		Решение: Заблокировать запись или перенести в OU External"+
	"	5. Ошибки выгрузки групп рассылок из ЗУП" + СимволПереносаСтроки+
	"		Решение: Указать EmployeeID в записи AD или создать новую запись AD с типом ""user"" или ""contact""";
	
//-----------------------------------------------------------------  
//Выполнение  
//----------------------------------------------------------------- 

НомерОшибки = 0;// общий счетчик

//РАЗДЕЛ 1. ОТДЕЛЬНО ПО КАЖДОЙ AD 

Для каждого КлючИЗначениеНастроек ИЗ НастройкиAD Цикл
	
    ТекСистема = КлючИЗначениеНастроек.Ключ;
    ТекСистемаGUID = XMLСтрока(ТекСистема);
    ТекНастройкиСоединения = КлючИЗначениеНастроек.Значение; 
    
    НомерОшибкиТекущегоAD = 0;
    ТекстСообщенияТекущегоAD = СимволПереносаСтроки+ СимволПереносаСтроки+"Ошибки по AD "+ТекСистема+":";
    
	//1 - сотрудники без EmployeeID 
	НомерОшибкиТекущейПроверки = 0;
	ТекстЗапросаБезEID = ПолучитьЗначениеПеременной(Переменные,"ТекстЗапросаБезEID");
	ТекстЗапросаБезEID = СтрЗаменить(ТекстЗапросаБезEID,"&СистемаGUID",ТекСистемаGUID); 
	FilterOU = ТекНастройкиСоединения.OUWorker + "," + ТекНастройкиСоединения.DC;  
	ТекстЗапросаБезEID = СтрЗаменить(ТекстЗапросаБезEID,"&FilterOU",FilterOU);

	ЗаписиSQL = Соединение.Execute(ТекстЗапросаБезEID);		
	Если ЗаписиSQL.State = 1 Тогда 
		Пока ЗаписиSQL.EOF = 0 Цикл 
			НомерОшибки = НомерОшибки + 1;
			НомерОшибкиТекущегоAD = НомерОшибкиТекущегоAD + 1;
			НомерОшибкиТекущейПроверки = НомерОшибкиТекущейПроверки + 1;
				
			ADsPath = ЗаписиSQL.Fields("ADsPath").Value;	
			DisplayName = ЗаписиSQL.Fields("DisplayName").Value;  
			
			ТекстСообщенияТекущегоAD = ТекстСообщенияТекущегоAD + СимволПереносаСтроки + Символы.Таб + НомерОшибкиТекущегоAD+ "." +Символы.Таб + "Не заполнен EmployeeID: "+DisplayName+" ("+ADsPath+")";
			
			
			Если НомерОшибкиТекущейПроверки >= 100 Тогда //ТОП 100
				ТекстСообщенияТекущегоAD = ТекстСообщенияТекущегоAD + СимволПереносаСтроки + СимволПереносаСтроки + "Прервано, так как количество >100"; 
				Прервать;
			КонецЕсли;
			ЗаписиSQL.MoveNext();
									
		КонецЦикла; 
	КонецЕсли;
		
	//2 - Только активные пользователи
	НомерОшибкиТекущейПроверки = 0;
	ТекстЗапросаТолькоАктивные = ПолучитьЗначениеПеременной(Переменные,"ТекстЗапросаТолькоАктивные");
	ТекстЗапросаТолькоАктивные = СтрЗаменить(ТекстЗапросаТолькоАктивные,"&СистемаGUID",ТекСистемаGUID); 
	FilterOU = ТекНастройкиСоединения.OUWorker + "," + ТекНастройкиСоединения.DC;  
	ТекстЗапросаТолькоАктивные = СтрЗаменить(ТекстЗапросаТолькоАктивные,"&FilterOU",FilterOU);
	ЗаписиSQL = Соединение.Execute(ТекстЗапросаТолькоАктивные);		
	Если ЗаписиSQL.State = 1 Тогда 
		Пока ЗаписиSQL.EOF = 0 Цикл 
			НомерОшибки = НомерОшибки + 1;
			НомерОшибкиТекущегоAD = НомерОшибкиТекущегоAD + 1;
			НомерОшибкиТекущейПроверки = НомерОшибкиТекущейПроверки + 1;
			
			ADsPath = ЗаписиSQL.Fields("ADsPath").Value;	
			DisplayName = ЗаписиSQL.Fields("DisplayName").Value;  
			
			ТекстСообщенияТекущегоAD = ТекстСообщенияТекущегоAD + СимволПереносаСтроки + Символы.Таб + НомерОшибкиТекущегоAD+ "." +Символы.Таб + "Заблокированный пользователь в OU работающих: "+DisplayName+" ("+ADsPath+")";
			
			
			Если НомерОшибкиТекущейПроверки >= 100 Тогда //ТОП 100
				ТекстСообщенияТекущегоAD = ТекстСообщенияТекущегоAD + СимволПереносаСтроки + СимволПереносаСтроки + "Прервано, так как количество >100"; 
				Прервать;
			КонецЕсли;
			ЗаписиSQL.MoveNext();
									
		КонецЦикла; 
	КонецЕсли; 

	//3 - Только работающие сотрудники
	НомерОшибкиТекущейПроверки = 0;
	ТекстЗапросаТолькоРаботающие = ПолучитьЗначениеПеременной(Переменные,"ТекстЗапросаТолькоРаботающие");
	ТекстЗапросаТолькоРаботающие = СтрЗаменить(ТекстЗапросаТолькоРаботающие,"&СистемаGUID",ТекСистемаGUID); 
	FilterOU = ТекНастройкиСоединения.OUWorker + "," + ТекНастройкиСоединения.DC;  
	ТекстЗапросаТолькоРаботающие = СтрЗаменить(ТекстЗапросаТолькоРаботающие,"&FilterOU",FilterOU);
	ЗаписиSQL = Соединение.Execute(ТекстЗапросаТолькоРаботающие);		
	Если ЗаписиSQL.State = 1 Тогда 
		Пока ЗаписиSQL.EOF = 0 Цикл 
			НомерОшибки = НомерОшибки + 1;
			НомерОшибкиТекущегоAD = НомерОшибкиТекущегоAD + 1;
			НомерОшибкиТекущейПроверки = НомерОшибкиТекущейПроверки + 1;
			
			ADsPath = ЗаписиSQL.Fields("ADsPath").Value;	
			DisplayName = ЗаписиSQL.Fields("DisplayName").Value;  
			
			ТекстСообщенияТекущегоAD = ТекстСообщенияТекущегоAD + СимволПереносаСтроки + Символы.Таб + НомерОшибкиТекущегоAD+ "." +Символы.Таб + "Уволенный сотрудник в OU работающих: "+DisplayName+" ("+ADsPath+")";
			
			
			Если НомерОшибкиТекущейПроверки >= 100 Тогда //ТОП 100
				ТекстСообщенияТекущегоAD = ТекстСообщенияТекущегоAD + СимволПереносаСтроки + СимволПереносаСтроки + "Прервано, так как количество >100"; 
				Прервать;
			КонецЕсли;
			ЗаписиSQL.MoveNext();
									
		КонецЦикла; 
	КонецЕсли; 
	
	Если НомерОшибкиТекущегоAD > 0 Тогда  
		ТекстСообщения = ТекстСообщения + ТекстСообщенияТекущегоAD;	
	КонецЕсли;

КонецЦикла; 

//РАЗДЕЛ 2. СВОДНО ПО ВСЕМ AD
//4. Проверка дублей EID во всех AD
НомерОшибкиТекущейПроверки = 0;
ТекстСообщенияТекущейПроверки = СимволПереносаСтроки+ СимволПереносаСтроки+"Ошибки по всем AD:"; 

МассивУсловий = Новый массив;
Для каждого КлючИЗначениеНастроек ИЗ НастройкиAD Цикл
    ТекСистемаGUID = XMLСтрока(КлючИЗначениеНастроек.Ключ);
    ТекНастройкиСоединения = КлючИЗначениеНастроек.Значение; 
    FilterOU = ТекНастройкиСоединения.OUWorker + "," + ТекНастройкиСоединения.DC;     
	МассивУсловий.Добавить("(tAD.Система =\u0027"+ТекСистемаGUID+"\u0027 AND tAD.ADsPath like \u0027%"+FilterOU+"%\u0027 )");
КонецЦикла;

ТекстЗапросуДублиEID = ПолучитьЗначениеПеременной(Переменные,"ТекстЗапросуДублиEID");
ТекстЗапросуДублиEID = СтрЗаменить(ТекстЗапросуДублиEID,"&FilterAD_AND_OU",СтрСоединить(МассивУсловий," OR ")); 
ЗаписиSQL = Соединение.Execute(ТекстЗапросуДублиEID);		
Если ЗаписиSQL.State = 1 Тогда 
	ПрошлыйEID = Неопределено;
	Пока ЗаписиSQL.EOF = 0 Цикл 
		
			
		ADsPath = ЗаписиSQL.Fields("ADsPath").Value;	
		DisplayName = ЗаписиSQL.Fields("DisplayName").Value;  
		НазваниеСистемы = ЗаписиSQL.Fields("НазваниеСистемы").Value;
		employeeID = ЗаписиSQL.Fields("employeeID").Value;
		
		Если ПрошлыйEID <> employeeID Тогда
			//новый номер ошибки
			НомерОшибки = НомерОшибки + 1;
			НомерОшибкиТекущейПроверки = НомерОшибкиТекущейПроверки + 1; 
			ПрошлыйEID = employeeID;	
			
			ТекстСообщенияТекущейПроверки = ТекстСообщенияТекущейПроверки + СимволПереносаСтроки + Символы.Таб + НомерОшибкиТекущейПроверки+ "." +
				Символы.Таб + "Дубли записей с одинаковым EmployeeID: "+employeeID;
		КонецЕсли; 
			
		ТекстСообщенияТекущейПроверки = ТекстСообщенияТекущейПроверки + СимволПереносаСтроки + Символы.Таб +"* ("+НазваниеСистемы+") "+ DisplayName + " ("+ADsPath+")";
			
		Если НомерОшибкиТекущейПроверки >= 100 Тогда //ТОП 100
			ТекстСообщенияТекущейПроверки = ТекстСообщенияТекущейПроверки + СимволПереносаСтроки + СимволПереносаСтроки + "Прервано, так как количество >100"; 
			Прервать;
		КонецЕсли;
		ЗаписиSQL.MoveNext();
									
	КонецЦикла; 
КонецЕсли; 

Если НомерОшибкиТекущейПроверки > 0 Тогда  
	ТекстСообщения = ТекстСообщения + ТекстСообщенияТекущейПроверки;	
КонецЕсли;

//5. ошибки выгрузки рассылок из ЗУП
НомерОшибкиТекущейПроверки = 0;
ТекстСообщенияТекущейПроверки = СимволПереносаСтроки+ СимволПереносаСтроки+"Ошибки выгрузки групп рассылок из ЗУП по всем AD:"; 

ТекстЗапросаОшибкиРассылокИзЗУП = ПолучитьЗначениеПеременной(Переменные,"ТекстЗапросаОшибкиРассылокИзЗУП");
ЗаписиSQL = Соединение.Execute(ТекстЗапросаОшибкиРассылокИзЗУП);		
Если ЗаписиSQL.State = 1 Тогда 
	Пока ЗаписиSQL.EOF = 0 Цикл 
					
		EmployeeID = ЗаписиSQL.Fields("EmployeeID").Value;	
		ФИО = ЗаписиSQL.Fields("ФИО").Value;  
		СистемаAD = ЗаписиSQL.Fields("СистемаAD").Value;
		Система1С = ЗаписиSQL.Fields("Система1С").Value;
		
		ТекстСообщенияТекущейПроверки = ТекстСообщенияТекущейПроверки + СимволПереносаСтроки + Символы.Таб +НомерОшибкиТекущейПроверки+ "." +Символы.Таб +
			+ФИО+" ("+EmployeeID+")" + " не выгружен из системы "+Система1С+" в AD "+СистемаAD;
	
		Если НомерОшибкиТекущейПроверки >= 100 Тогда //ТОП 100
			ТекстСообщенияТекущейПроверки = ТекстСообщенияТекущейПроверки + СимволПереносаСтроки + СимволПереносаСтроки + "Прервано, так как количество >100"; 
			Прервать;
		КонецЕсли;
		ЗаписиSQL.MoveNext();
									
	КонецЦикла; 
КонецЕсли;
	
Если НомерОшибкиТекущейПроверки > 0 Тогда  
	ТекстСообщения = ТекстСообщения + ТекстСообщенияТекущейПроверки;	
КонецЕсли;



	 
//Отправка письма
Если НомерОшибки > 0 Тогда
	Алгоритм("ОтправитьEmail",ЗапросСсылка,ПочтаПолучателей,ТемаСообщения,ТекстСообщения,ТипТекстаПочтовогоСообщения.ПроизвольныйТекст,ГуидУчетнойЗаписиПочты); 
	СтрокаОшибок = СтрокаОшибок + ""+Система+" - сообщения отправлены"+Символы.ПС;
Иначе
	СтрокаОшибок = СтрокаОшибок + ""+Система+" - нет данных для отправки"+Символы.ПС;
КонецЕсли; 

Если не Отладка Тогда
	УстановитьДатуПоследнейВыгрузки(Система,ЗапросСсылка,ДатаНачалаВыгрузки);
КонецЕсли;',
  'Комментарий': '1 письмо по всем AD
ВАЖНО! - выполнять после загроузки AD в DWH'
 },
 'ТЧ': [
  {
   'Переменные': [
    {
     'Имя': 'СоединениеСAD',
     'Разделитель': 'e1cib/data/Справочник.УМ_ИнформационныеБазы?ref=a15ea98fe163581b11ee35fe299357e6',
     'ЗначениеСтрока': '',
     'Комментарий': ''
    },
    {
     'Имя': 'СоединениеСAD',
     'Разделитель': 'e1cib/data/Справочник.УМ_ИнформационныеБазы?ref=a12de1864915924911ed13c3b2a06616',
     'ЗначениеСтрока': '',
     'Комментарий': ''
    },
    {
     'Имя': 'СоединениеСAD',
     'Разделитель': 'e1cib/data/Справочник.УМ_ИнформационныеБазы?ref=a132c92cb48593b211ed39aa9f8643bd',
     'ЗначениеСтрока': '',
     'Комментарий': ''
    },
    {
     'Имя': 'ТекстЗапросаБезEID',
     'Разделитель': null,
     'ЗначениеСтрока': 'SELECT 
    [ADsPath]
    ,[DisplayName]
FROM [DWH].[dbo].[AD]
WHERE
    Система = \u0027&СистемаGUID\u0027 
    AND ADsPath like \u0027%&FilterOU%\u0027
    AND isnull(employeeID,\u0027\u0027) = \u0027\u0027',
     'Комментарий': ''
    },
    {
     'Имя': 'ТекстЗапросаТолькоАктивные',
     'Разделитель': null,
     'ЗначениеСтрока': 'SELECT 
    [ADsPath]
    ,[DisplayName]
FROM [DWH].[dbo].[AD]
WHERE
    Система = \u0027&СистемаGUID\u0027 
    AND ADsPath like \u0027%&FilterOU%\u0027
    AND isActive = 0',
     'Комментарий': ''
    },
    {
     'Имя': 'ТекстЗапросаТолькоРаботающие',
     'Разделитель': null,
     'ЗначениеСтрока': 'SELECT 
      [ADsPath]
      ,[DisplayName]
      ,УвПоEID.Уволен

  FROM [DWH].[dbo].[AD] as AD
  
  INNER JOIN
    (SELECT ФизическиеЛица.employeeID,
        CASE
            WHEN MIN(ДатаУвольнения) = \u00270001-01-01\u0027 or MAX(ДатаУвольнения) >= DATEADD(day,-7,GETDATE()) THEN 0 --не уволена или с увольнения прошло более 7 дней
            ELSE 1
        END AS Уволен
       FROM dbo.Сотрудники AS Сотрудники_1
       INNER JOIN dbo.ФизическиеЛица AS ФизическиеЛица ON Сотрудники_1.ФизЛицоUUID = ФизическиеЛица.UUID
       GROUP BY ФизическиеЛица.employeeID) AS УвПоEID

   ON AD.employeeID = УвПоEID.EmployeeID

   WHERE 
    Система = \u0027&СистемаGUID\u0027 
    AND ADsPath like \u0027%&FilterOU%\u0027
    AND УвПоEID.Уволен = 1',
     'Комментарий': ''
    },
    {
     'Имя': 'ТекстЗапросуДублиEID',
     'Разделитель': null,
     'ЗначениеСтрока': 'set nocount on

-- временная таблица с данными из всех AD
IF OBJECT_ID(\u0027tempdb..#TemTableDWH_AD\u0027) IS NOT NULL DROP Table #TemTableDWH_AD

SELECT ADsPath, DisplayName,employeeID,Система, НазваниеСистемы INTO #TemTableDWH_AD  From (
SELECT tAD.ADsPath, tAD.DisplayName, tAD.employeeID, tAD.Система, TSys.Наименование AS НазваниеСистемы 
FROM [DWH].[dbo].[AD] as tAD

	LEFT JOIN Системы as TSys ON tAD.Система = TSys.Система
WHERE 
	employeeID is NOT null AND employeeID <> \u0027\u0027 AND  employeeID <> \u0027-\u0027
    AND (
		&FilterAD_AND_OU
		-- (tAD.Система =\u0027299357e6-35fe-11ee-a15e-a98fe163581b\u0027 AND ADsPath like \u0027%OU=Users,OU=Office,DC=gln,DC=local%\u0027)
		-- OR (tAD.Система =\u00279f8643bd-39aa-11ed-a132-c92cb48593b2\u0027 AND ADsPath like \u0027%OU=Workers,OU=Users,OU=Office,OU=root,DC=tmssc,DC=ru%\u0027)
		-- OR (tAD.Система =\u0027b2a06616-13c3-11ed-a12d-e18649159249\u0027 AND ADsPath like \u0027%OU=Workers,OU=Users,OU=Office,OU=root,DC=t-medica,DC=com%\u0027)
	
	)   

) as T2

-- ищем дубли employeeID

Select 
	TempT.employeeID
	,TempT.ADsPath
	,TempT.DisplayName
	,TempT.НазваниеСистемы
FROM (SELECT 
		employeeID
		,COUNT(DISTINCT [ADsPath]) as DistCount
		FROM #TemTableDWH_AD
		group BY employeeID
		HAVING COUNT(DISTINCT [ADsPath]) > 1 ) AS T_errors
INNER JOIN #TemTableDWH_AD as TempT ON T_errors.employeeID = TempT.employeeID

order by TempT.employeeID



DROP TABLE #TemTableDWH_AD

set nocount off



SELECT 
    [ADsPath]
    ,[DisplayName]
FROM [DWH].[dbo].[AD]
WHERE
    Система = \u0027&СистемаGUID\u0027 
    AND ADsPath like \u0027%&FilterOU%\u0027
    AND isActive = 0',
     'Комментарий': ''
    },
    {
     'Имя': 'ТекстЗапросаОшибкиРассылокИзЗУП',
     'Разделитель': null,
     'ЗначениеСтрока': 'SELECT 
    T1.EmployeeID as EmployeeID
    ,T1.ФИО as ФИО
    ,isNULL(СистемыAD.Наименование,T1.СистемаAD) as СистемаAD
    ,isNull(Системы1С.Наименование,T1.Система) as Система1С
FROM ( SELECT
    [ФизическиеЛица].EmployeeID
    ,[СотрудникиЗначенияРассылок].СистемаAD
    ,[СотрудникиЗначенияРассылок].Система
    ,MAX([ФизическиеЛица].Наименование) as ФИО
  FROM [dbo].[СотрудникиЗначенияРассылок]
  INNER JOIN [dbo].[Сотрудники] on [СотрудникиЗначенияРассылок].СотрудникUUID = [Сотрудники].UUID
  INNER JOIN [dbo].[ФизическиеЛица] on [Сотрудники].ФизЛицоUUID = [ФизическиеЛица].UUID
  WHERE 
  Сотрудники.ДатаУвольнения = \u002700010101\u0027
  GROUP BY [ФизическиеЛица].EmployeeID, [СотрудникиЗначенияРассылок].СистемаAD, [СотрудникиЗначенияРассылок].Система) as T1
LEFT JOIN [dbo].AD ON T1.СистемаAD = AD.Система AND  T1.EmployeeID = AD.EmployeeID
LEFT JOIN [dbo].Системы as СистемыAD ON T1.СистемаAD = СистемыAD.Система 
LEFT JOIN [dbo].Системы as Системы1С ON T1.Система = Системы1С.Система 
WHERE AD.EmployeeID is null',
     'Комментарий': ''
    }
   ]
  }
 ]
}
