{
 'Реквизиты': {
  'Код': 'СформироватьДанныеПоПредставитДляДоверенностиИзЗУП',
  'Наименование': 'Сформировать данные по представителям для доверенности из ЗУП',
  'Принадлежит': 'e1cib/data/Справочник.УМ_Запрос?ref=00000000000000000000000000000000',
  'ТекстАлгоритма': '//Переменные для работы
ЭтоМЧД = УправлениеСвойствами.ЗначениеСвойства(Документ.Шаблон, "ЭтоМЧД_ЗаявкаНаДоверенность") = Истина;
СсылкаНаДопДанные = DT_ОбщегоНазначенияСерверВызовСервера.ПолучитьСсылкуНаДопДанныеДокумента(Документ, "DT_Данные_ЗаявкаНаДоверенность");

ТЗ_Результат = СсылкаНаДопДанные.Представители.ВыгрузитьКолонки(
	"Сотрудник,ФИО,КемВыдан,КогдаВыдан,КодПодразделения,ДатаРождения,ИННПредставителя,СНИЛСПредставителя");
ТЗ_Результат.Колонки.Добавить("СерияНомерПаспорта", Новый ОписаниеТипов("Строка"));

//Подготовка данных для работы
ГуидСотрудник = Новый Соответствие;
МассивГУИДовСотрудников = Новый Массив;
Для каждого Строка Из СсылкаНаДопДанные.Представители Цикл
	НСтрока = ТЗ_Результат.Добавить();
	ЗаполнитьЗначенияСвойств(НСтрока, Строка);
	НСтрока.СерияНомерПаспорта = СтрШаблон("%1 № %2", Строка.СерияПаспорта, Строка.НомерПаспорта);
	
	Если НЕ Строка.ЭтоСотрудникКомпании Тогда
		Продолжить;
	КонецЕсли;
	
	НСтрока.ФИО = Строка.Сотрудник.ПредставлениеВДокументах;
	
	ГУИДОбщий  = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Строка.Сотрудник, "DT_UUID");
	ГУИД = Прав(ГУИДОбщий, 36);
	МассивГУИДовСотрудников.Добавить(ГУИД);
	
	ГуидСотрудник.Вставить(ГУИД, Строка.Сотрудник);
КонецЦикла;

СотрудникиЮридическогоОтдела = РегистрыСведений.ИсполнителиРолей.ИсполнителиРоли(
	УМ_ДинамическиеКонстантыПовтИсп.ПолучитьЗначениеДинамическойКонстанты("Роль_ЮридическийОтдел"));
ЭтоСотрудникЮрОтдела = СотрудникиЮридическогоОтдела.Найти(Сотрудники.ОсновнойСотрудник()) <> Неопределено;

//Получение данных из ЗУП
ПодключениеЗУП_universal = Справочники.УМ_ПодключенияКИнформациннымБазам.ПолучитьСсылку(Новый УникальныйИдентификатор("81331f10-b85c-11ef-8cbf-a0d3c1fa1eff"));
Соединение = УМ_ВнешниеПодключения.ПолучитьСоединениеПоПодключению(ПодключениеЗУП_universal);
Если ЭтоСотрудникЮрОтдела И Соединение <> Неопределено Тогда

	КодДляВыполнения = 
		"МассивРезультат = Новый Массив;
		|
		|МассивСотрудников  = Новый Массив;
		|Для каждого ГУИД Из params Цикл
		|	МассивСотрудников.Добавить(Справочники.Глн_УправленческиеСотрудники.ПолучитьСсылку(Новый УникальныйИдентификатор(ГУИД)));
		|КонецЦикла;
		|
		|Запрос = Новый Запрос;
		|Запрос.Текст = 
		|	""ВЫБРАТЬ
		|	|	Глн_УправленческиеСотрудники.Владелец КАК Владелец,
		|	|	Глн_УправленческиеСотрудники.Ссылка КАК Сотрудник
		|	|ПОМЕСТИТЬ ВТ_ФизЛица
		|	|ИЗ
		|	|	Справочник.Глн_УправленческиеСотрудники КАК Глн_УправленческиеСотрудники
		|	|ГДЕ
		|	|	Глн_УправленческиеСотрудники.Ссылка В(&Сотрудники)
		|	|;
		|	|
		|	|////////////////////////////////////////////////////////////////////////////////
		|	|ВЫБРАТЬ
		|	|	ВТ_ФизЛица.Владелец КАК ФизЛицо,
		|	|	ВТ_ФизЛица.Сотрудник КАК Сотрудник,
		|	|	ФизическиеЛица.ДатаРождения КАК ДатаРождения,
		|	|	ЕСТЬNULL(ФизическиеЛица.ИНН, """""""") КАК ИННПредставителя,
		|	|	ЕСТЬNULL(ФизическиеЛица.СтраховойНомерПФР, """""""") КАК СНИЛСПредставителя,
		|	|	ЕСТЬNULL(ДокументыФизическихЛицСрезПоследних.Серия, """""""") КАК Серия,
		|	|	ЕСТЬNULL(ДокументыФизическихЛицСрезПоследних.Номер, """""""") КАК Номер,
		|	|	ЕСТЬNULL(ДокументыФизическихЛицСрезПоследних.КемВыдан, """""""") КАК КемВыдан,
		|	|	ЕСТЬNULL(ДокументыФизическихЛицСрезПоследних.ДатаВыдачи, """""""") КАК КогдаВыдан,
		|	|	ЕСТЬNULL(ДокументыФизическихЛицСрезПоследних.КодПодразделения, """""""") КАК КодПодразделения
		|	|ИЗ
		|	|	ВТ_ФизЛица КАК ВТ_ФизЛица
		|	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|	|		ПО ВТ_ФизЛица.Владелец = ФизическиеЛица.Ссылка
		|	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(&ТекущаяДата, ) КАК ДокументыФизическихЛицСрезПоследних
		|	|		ПО ВТ_ФизЛица.Владелец = ДокументыФизическихЛицСрезПоследних.Физлицо
		|	|			И (ДокументыФизическихЛицСрезПоследних.ВидДокумента = &Паспорт)"";
		|Запрос.УстановитьПараметр(""Паспорт"", Справочники.ВидыДокументовФизическихЛиц.ПаспортРФ);
		|Запрос.УстановитьПараметр(""Сотрудники"", МассивСотрудников);
		|Запрос.УстановитьПараметр(""ТекущаяДата"", ТекущаяДата());
		|
		|РезультатЗапроса = Запрос.Выполнить();
		|ВыборкаРезультат = РезультатЗапроса.Выбрать();
		|Пока ВыборкаРезультат.Следующий() Цикл
		|	СтруктураДанных = Новый Структура(""ГУИД,ДатаРождения,ИННПредставителя,СНИЛСПредставителя,СерияНомерПаспорта,КемВыдан,КогдаВыдан,КодПодразделения"");
		|	ЗаполнитьЗначенияСвойств(СтруктураДанных, ВыборкаРезультат);
		|
		|	СтруктураДанных.ГУИД = XMLСтрока(ВыборкаРезультат.Сотрудник);
		|	СтруктураДанных.СерияНомерПаспорта = СтрШаблон(""%1 № %2"", ВыборкаРезультат.Серия, ВыборкаРезультат.Номер);
		|	
		|	МассивРезультат.Добавить(СтруктураДанных);
		|КонецЦикла;
		|
		|Result = ЗначениеВСтрокуВнутр(МассивРезультат);";

	ДанныеЗапроса = Новый Структура("params,value");
	ДанныеЗапроса.Вставить("params"	, МассивГУИДовСотрудников);
	ДанныеЗапроса.Вставить("value"	, КодДляВыполнения);

	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, ДанныеЗапроса);			

	СтрокаТелаЗапроса = ЗаписьJSON.Закрыть();


	HTTPЗапрос = Новый HTTPЗапрос(Соединение.АдресЗапроса);
	HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаТелаЗапроса);

	МассивРезультата = Новый Массив;
	Попытка
		
		Результат = Соединение.HTTPСоединение.ВызватьHTTPМетод("POST", HTTPЗапрос); 
		
		Если Результат.КодСостояния = 200 Тогда
		   Попытка
				Чтение = Новый ЧтениеJSON;
				Чтение.УстановитьСтроку(Результат.ПолучитьТелоКакСтроку());  
				СтруктураОтвета = ПрочитатьJSON(Чтение); 
				Чтение.Закрыть(); 
				
				МассивРезультата = ЗначениеИзСтрокиВнутр(СтруктураОтвета.Result);
			Исключение  
				ЗаписьЖурналаРегистрации(ИмяСобытия,
					УровеньЖурналаРегистрации.Ошибка,
					Метаданные.Справочники.ДокументыПредприятия,
					Документ,
					"Не удалось прочитать ответ сервиса ДО: " + Символы.ПС + ОписаниеОшибки());
			КонецПопытки;
		Иначе
		   ЗаписьЖурналаРегистрации(ИмяСобытия,
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.ДокументыПредприятия,
			Документ,
			"Код состояния: " + Результат.КодСостояния + Символы.ПС + Результат.ПолучитьТелоКакСтроку());
	    КонецЕсли;
		
	Исключение

		ЗаписьЖурналаРегистрации(ИмяСобытия,
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.ДокументыПредприятия,
			Документ,
			ОписаниеОшибки());
	КонецПопытки;

	Для каждого ДанныеПоСотруднику Из МассивРезультата Цикл

		Сотрудник = ГуидСотрудник[ДанныеПоСотруднику.ГУИД];
		Строка = ТЗ_Результат.Найти(Сотрудник, "Сотрудник");
		
		Если ЗначениеЗаполнено(Строка) Тогда
			ЗаполнитьЗначенияСвойств(Строка, ДанныеПоСотруднику);
		КонецЕсли;

	КонецЦикла;
КонецЕсли;

//Формирование данных по Представителям
МассивСтрок = Новый Массив;
Для каждого Строка Из ТЗ_Результат Цикл
	
	ФИО = "гр. " + Строка.ФИО + ",";
	
	Строка_ДатаРождения = ?(ЗначениеЗаполнено(Строка.ДатаРождения),
							Формат(Строка.ДатаРождения, "ДФ=dd.MM.yyyy"),
							"__________");
	
	ДанныеСтрока = СтрШаблон("%1 года рождения, паспорт серия:%2, выдан %3, дата выдачи %4, код подразделения: %5",
					Строка_ДатаРождения,
					Строка.СерияНомерПаспорта,
					Строка.КемВыдан,
					Формат(Строка.КогдаВыдан, "ДФ=dd.MM.yyyy"),
					Строка.КодПодразделения);
					
	ДанныеДляМЧД = "";
	Если ЭтоМЧД Тогда
		ДанныеДляМЧД = СтрШаблон(", ИНН: %1, СНИЛС: %2",
						Строка.ИННПредставителя,
						Строка.СНИЛСПредставителя);
	КонецЕсли;
					
	ДанныеСтрока = ФИО + ?(НуженПереносСтроки, Символы.ПС, " ") + ДанныеСтрока + ДанныеДляМЧД;
	МассивСтрок.Добавить(ДанныеСтрока);

КонецЦикла;

СимволРазделитель = ?(НуженПереносСтроки, "," + Символы.ПС, ", ");

ЗначениеВозвратаАлгоритма = СтрСоединить(МассивСтрок, СимволРазделитель);',
  'Описание': ''
 },
 'ТЧ': [
  {
   'Параметры': [
    {
     'ИмяПараметра': 'Документ'
    },
    {
     'ИмяПараметра': 'НуженПереносСтроки'
    },
    {
     'ИмяПараметра': 'ИмяСобытия'
    }
   ]
  }
 ]
}
