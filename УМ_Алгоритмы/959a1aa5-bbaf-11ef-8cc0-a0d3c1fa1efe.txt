{
 'Реквизиты': {
  'Код': 'ПисьмоПредставителямВЗаявкеНаДоверенность_Процесс',
  'Наименование': 'ПисьмоПредставителямВЗаявкеНаДоверенность_Процесс',
  'Принадлежит': 'e1cib/data/Справочник.УМ_Запрос?ref=00000000000000000000000000000000',
  'ТекстАлгоритма': 'Документ = Неопределено;
Для каждого Строка Из Событие.Источник.Предметы Цикл
	Если ТипЗнч(Строка.Предмет) = Тип("СправочникСсылка.ДокументыПредприятия")
		И Строка.РольПредмета = Перечисления.РолиПредметов.Основной Тогда
		
		Документ = Строка.Предмет;
	КонецЕсли;
КонецЦикла;

Если ЗначениеЗаполнено(Документ) Тогда
	НастройкиПоВидуДокумента = DT_ОбщегоНазначениеПовтИсп.ПолучитьНастройкиПоВидуДокумента(Документ.ВидДокумента);
	
	Если НастройкиПоВидуДокумента.ФункционалЗаявкиНаДоверенность Тогда
		СсылкаДопДанные = DT_ОбщегоНазначенияСерверВызовСервера.ПолучитьСсылкуНаДопДанныеДокумента(Документ, "DT_Данные_ЗаявкаНаДоверенность");
		
		Если ЗначениеЗаполнено(СсылкаДопДанные) Тогда
			
			Если ПрикрепитьФайлы Тогда
				//Если документ Не согласован или Не подписан, то файлы не прикрепляю
				ВсеСостояния = Делопроизводство.ПолучитьВсеСостоянияДокумента(Документ);
				Для каждого Строка Из ВсеСостояния Цикл
					Если Строка.Состояние = Перечисления.СостоянияДокументов.НеСогласован ИЛИ Строка.Состояние = Перечисления.СостоянияДокументов.Отклонен Тогда
						ПрикрепитьФайлы = Ложь;
					КонецЕсли; 
				КонецЦикла;
			КонецЕсли;
			
			ДанныеДляОтправки = Новый Массив;
			Если ТипЗнч(Документ.Подготовил) = Тип("СправочникСсылка.Сотрудники") Тогда
				ПодготовилПользователь = Сотрудники.ЛюбойПользовательСотрудника(Документ.Подготовил);
			Иначе	
				ПодготовилПользователь = Сотрудники.ЛюбойПользовательСотрудника(Документ.Подготовил);
			КонецЕсли;
			
			ПочтыРуководителей = Новый Массив;
			
			Для каждого Строка Из СсылкаДопДанные.Представители Цикл
				
				Если Строка.ЭтоСотрудникКомпании Тогда
					
					ПользовательСотрудника = Сотрудники.ЛюбойПользовательСотрудника(Строка.Сотрудник);
					НеАвторДокумента = ПользовательСотрудника <> ПодготовилПользователь;
					Если УведомитьАвтора ИЛИ НеАвторДокумента Тогда
						
						АдресаЭлектроннойПочты = РегистрыСведений.СпособыУведомленияПользователей.ПолучитьСпособУведомленияПользователя(
								ПользовательСотрудника, Перечисления.СпособыУведомления.ПоПочте);
						Для каждого ПочтаСотрудника Из АдресаЭлектроннойПочты Цикл
							Если ЗначениеЗаполнено(ПочтаСотрудника) Тогда
								Данные = Новый Структура("ЕстьДоступ,Почта,ПрикрепитьФайлы");
								Данные.ЕстьДоступ = Истина;
								Данные.Почта = ПочтаСотрудника;
								Данные.ПрикрепитьФайлы = ПрикрепитьФайлы;
								ДанныеДляОтправки.Добавить(Данные);
							КонецЕсли;
						КонецЦикла;
					
					КонецЕсли;
					
					Если УведомитьРуководителя И НеАвторДокумента Тогда
					//Руководитель автора, он же руководитель подразделения есть на первом этапе
						
						РуководительПодразделения = Документ.Подразделение.Руководитель;
						РуководительПользователь = Сотрудники.ЛюбойПользовательСотрудника(РуководительПодразделения);
						
						РуководительСотрудника = Строка.Сотрудник.Подразделение.Руководитель;
						РуководительСотрудникаПользователь = Сотрудники.ЛюбойПользовательСотрудника(РуководительСотрудника);
						
						Если РуководительПодразделения <> РуководительСотрудникаПользователь Тогда
						
							АдресаЭлектроннойПочты = РегистрыСведений.СпособыУведомленияПользователей.ПолучитьСпособУведомленияПользователя(
									РуководительСотрудникаПользователь, Перечисления.СпособыУведомления.ПоПочте);
							Для каждого ПочтаСотрудника Из АдресаЭлектроннойПочты Цикл
								Если ЗначениеЗаполнено(ПочтаСотрудника) И ПочтыРуководителей.Найти(ПочтаСотрудника) = Неопределено Тогда
									Данные = Новый Структура("ЕстьДоступ,Почта,ПрикрепитьФайлы");
									Данные.ЕстьДоступ = Истина;
									Данные.Почта = ПочтаСотрудника;
									Данные.ПрикрепитьФайлы = Ложь;
									ДанныеДляОтправки.Добавить(Данные);
								КонецЕсли;
							КонецЦикла;
						
						КонецЕсли;
					
					КонецЕсли;
					
				Иначе	
					Если ЗначениеЗаполнено(Строка.Email) Тогда
						Данные = Новый Структура("ЕстьДоступ,Почта,ПрикрепитьФайлы");
						Данные.ЕстьДоступ = Ложь;
						Данные.Почта = Строка.Email;
						Данные.ПрикрепитьФайлы = ПрикрепитьФайлы;
						ДанныеДляОтправки.Добавить(Данные);
					КонецЕсли;
					
					Если УведомитьРуководителя Тогда
						
						Если ЗначениеЗаполнено(Строка.EmailРуководителя) И ПочтыРуководителей.Найти(Строка.EmailРуководителя) = Неопределено Тогда
							Данные = Новый Структура("ЕстьДоступ,Почта,ПрикрепитьФайлы");
							Данные.ЕстьДоступ = Ложь;
							Данные.Почта = Строка.EmailРуководителя;
							Данные.ПрикрепитьФайлы = Ложь;
							ДанныеДляОтправки.Добавить(Данные);
							
							ПочтыРуководителей.Добавить(ПочтаСотрудника);
						КонецЕсли;
						
					КонецЕсли;
				КонецЕсли;
			
			КонецЦикла;
			
			Если ПрикрепитьФайлы Тогда
				
				Вложения = Новый Массив;
				РольФайлов = УМ_ДинамическиеКонстантыПовтИсп.ПолучитьЗначениеДинамическойКонстанты("РольФайловДляУведомленийПоЗаявкеНаДоверенность");
				ТаблицаФайлы = Делопроизводство.ПолучитьДанныеФайловДляСписка(Неопределено, Документ);
				Для каждого Строка Из ТаблицаФайлы Цикл
					Если Строка.РольФайла <> РольФайлов Тогда
						Продолжить;
					КонецЕсли;
					
					СтруктураВложения = Новый Структура;
					СтруктураВложения.Вставить("Данные"	, РаботаСФайламиВызовСервера.ПолучитьДвоичныеДанныеФайла(Строка.Ссылка));
					СтруктураВложения.Вставить("Имя"	, Строка.Наименование + "." + Строка.Расширение);
					Вложения.Добавить(СтруктураВложения);
				КонецЦикла;
				
			КонецЕсли;
			
			ЭтоМЧД = УправлениеСвойствами.ЗначениеСвойства(Документ.Шаблон, "ЭтоМЧД_ЗаявкаНаДоверенность") = Истина;
			ФормаДоверенности = ?(ЭтоМЧД, "МЧД", "На бумаге");
			Организация = ?(СсылкаДопДанные.СторонняяОрганизация, СсылкаДопДанные.НаименованиеСтороннейОрганизации, СсылкаДопДанные.Организация.НаименованиеПолное);
			
			
			РезультатДействий = "";
			Если РезультатОбработки Тогда
			
				МассивСостояний = Новый Массив;
				ВсеСостояния = Делопроизводство.ПолучитьВсеСостоянияДокумента(Документ);
				Для каждого Строка Из ВсеСостояния Цикл
					Если Строка.Состояние = Перечисления.СостоянияДокументов.Проект Тогда
						Продолжить;
					КонецЕсли;
					МассивСостояний.Добавить(Строка(Строка.Действие)+ ": " + Строка(Строка.Состояние));
				КонецЦикла;
				РезультатДействий = СтрСоединить(МассивСостояний, ", ");
			
			КонецЕсли;
			
			
			Тема = ТемаПисьма + Документ.Заголовок;

			ТекстПисьма = "";
			РаботаСУведомлениями.ДобавитьРеквизитКСтроке(ТекстПисьма, "Документ", Документ.Заголовок);
			РаботаСУведомлениями.ДобавитьРеквизитКСтроке(ТекстПисьма, "Форма доверенности", ФормаДоверенности);
			РаботаСУведомлениями.ДобавитьРеквизитКСтроке(ТекстПисьма, "Организация", Организация);
			РаботаСУведомлениями.ДобавитьРеквизитКСтроке(ТекстПисьма, "Подготовил документ", ПодготовилПользователь);
			РаботаСУведомлениями.ДобавитьРеквизитКСтроке(ТекстПисьма, "РезультатОбработки", РезультатДействий);
			
			НавигационнаяСсылка = РаботаСУведомлениями.ПолучитьНавигационнуюСсылкуУведомления(Документ);
			
			СистемнаяПочта = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
			
			Для каждого Данные Из ДанныеДляОтправки Цикл
				
				Если Данные.ЕстьДоступ Тогда
					Текст = ТекстПисьма;
					РаботаСУведомлениями.ДобавитьРеквизитКСтроке(Текст, "Ссылка на документ", НавигационнаяСсылка);
				Иначе
					Текст = ТекстПисьма;
				КонецЕсли;
				
				ПараметрыПисьма = Новый Структура;
				ПараметрыПисьма.Вставить("Тема"		, Тема);
				ПараметрыПисьма.Вставить("Текст"	, РаботаСУведомлениями.ТекстУведомленияВHTML(Текст));
				ПараметрыПисьма.Вставить("Кому"		, Данные.Почта);
				ПараметрыПисьма.Вставить("ТипТекста", Перечисления.ТипыТекстовПочтовыхСообщений.HTML);

				Если Данные.ПрикрепитьФайлы Тогда
					Если ЗначениеЗаполнено(Вложения) Тогда
						ПараметрыПисьма.Вставить("Вложения", Новый Массив);
						Для Каждого Вложение Из Вложения Цикл
							СтруктураВложения = Новый Структура("Адрес, ИмяФайла");
							СтруктураВложения.Адрес = Вложение.Данные;
							СтруктураВложения.ИмяФайла = Вложение.Имя;
							ПараметрыПисьма.Вложения.Добавить(СтруктураВложения);
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
				
				
				ОписаниеВложений = "";
				Если ПараметрыПисьма.Свойство("Вложения") Тогда
					МассивИменВложений = Новый массив;
					Для каждого стрВложения из ПараметрыПисьма.Вложения Цикл 
						МассивИменВложений.Добавить(стрВложения.ИмяФайла);	
					КонецЦикла;
					ОписаниеВложений = "Вложения: "+СтрСоединить(МассивИменВложений,Символы.ПС);
				КонецЕсли;
					
				СообщениеОбОшибке = "";
				УведомлениеОтправлено = ЛегкаяПочтаСервер.ОтправитьИнтернетПочта(
					ПараметрыПисьма, СистемнаяПочта,, СообщениеОбОшибке);
				Если УведомлениеОтправлено Тогда
					РегистрыСведений.DT_ОтправленныеУведомления.ЗафиксироватьОтправленноеУведомление(
						"ПоПочте",
						ПараметрыПисьма.Кому,
						ПараметрыПисьма.Тема,
						ПараметрыПисьма.Текст,
						ОписаниеВложений);	
				Иначе
					ЗаписьЖурналаРегистрации("DT_ОтправкаУведомленийПредставителямЗаявкиНаДоверенность",
						УровеньЖурналаРегистрации.Ошибка,,
						Документ,
						"Не удалось отправить письмо." + Символы.ПС +
						Символы.ПС +
						Символы.ПС +
						"Данные письма:" + Символы.ПС +
						"    - Кому: " + ПараметрыПисьма.Кому + Символы.ПС +
						"    - Тема письма: " + ПараметрыПисьма.Тема + Символы.ПС +
						"    - Текст письма: " + ПараметрыПисьма.Текст + Символы.ПС +
						"    - Вложения: " + ОписаниеВложений + Символы.ПС +
						Символы.ПС +
						Символы.ПС +
						"Место отправки: Справочник.ПользовательскиеОбработчикиБизнесСобытий" + Символы.ПС +
						"Идентификатор события в РС.ПроизошедшиеБизнесСобытия:" + Событие.Идентификатор + Символы.ПС +
						Символы.ПС +
						Символы.ПС +
						"Ошибка: " + Символы.ПС + СообщениеОбОшибке);
				КонецЕсли;
			
			КонецЦикла;
		
		КонецЕсли;
	
	КонецЕсли;

КонецЕсли;',
  'Описание': ''
 },
 'ТЧ': [
  {
   'Параметры': [
    {
     'ИмяПараметра': 'Событие'
    },
    {
     'ИмяПараметра': 'ТемаПисьма'
    },
    {
     'ИмяПараметра': 'ПрикрепитьФайлы'
    },
    {
     'ИмяПараметра': 'УведомитьАвтора'
    },
    {
     'ИмяПараметра': 'УведомитьРуководителя'
    },
    {
     'ИмяПараметра': 'РезультатОбработки'
    }
   ]
  }
 ]
}
